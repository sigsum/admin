* I-D its-all-about-linkability

As long as we're sending packets around with the same src IP addr
field being used for a whole lot of different things, these different
things are linkable and if any information at any destination is
linkable to you, you're linked to everything you've done using that
src addr.

The same goes for other [entities] linked to your person, like the
fingerprint of your web browser and [more examples].

[scope?]

- spatial and temporal linkability?
  - temporal, examples
    - src ip; send email using a given ip addr and email addr, later
      use another ip addr but the same email addr;
      person <-> src ip <-> email addr

    - browser fp; browser visiting one site and later another site -- 
  - spatial, examples
    - [todo]

** [[gnus:nnimap%2Badbc:INBOX#52360EED.6060102@cs.tcd.ie][email w/ stephen]]
> * I-D its-all-about-linkability
> 
> As long as we're sending packets around with the same src IP addr
> field being used for a whole lot of different things, these different
> things are linkable and if any information at any destination is
> linkable to you, you're linked to everything you've done using that
> src addr.

Yup. And as long as you need an answer, you're stuck with that.
(Modulo changing your source address, but with BCP38 networks
doing uRPF, you're limited in what you can do, and your MAC
addr will also give things away to those nearby.)

> 
> The same goes for other [entities] linked to your person, like the
> fingerprint of your web browser and [more examples].

Yup.

I think it'd get tricky to define some good goals here - clearly
most people do not want full unlinkability. One could argue that
most people's activities ought be less linkable though. Hard to
draw a good line there.

> --8<---------------cut here---------------end--------------->8---
> 
> I also have this thing buzzing at the back of my head saying "spatial
> and temporal linkability" but I don't know yet how to explain
> it. Temporal is pretty easy, example:
> 
>     - src ip; send email using a given ip addr and email addr, later
>       use another ip addr but the same email addr;
>       person <-> src ip <-> email addr
> 
> But spatial is probably not the right word for what I'm trying to
> express, but it's about linking your separate devices to your person.

I get what you mean. Maybe its two things: topological and
cross-layer (or cross-application) linkages?

Topological linkage for example would include when TB sends out
packets with the src addr from my home lan when I reboot in work
the next day.

Cross-layer would be when the same MAC is used with different
src IPs, or when the different src IPs are used to access my
very own web server host via SSH.

Cross-application might be different or not, but would include
things like the netflix competition correlation.

> Are these terms that are in use in the IETF? Could they be useful? 

No and yes.

> Is
> this anything that I should try to bring up somehow? 

Sure. I think in the first instance it'd be good to do that in
terms of extending rfc 6973 if you think that makes sense.

> I'm a bit at loss
> and entering this arena at the wrong level seems to be a good way of
> being shot down hard. I wouldn't want that, not because of a hurt ego
> (heh, being stupid is part of the game) but rather to avoid burning my
> name with people who I would like to be able to speak to in Vancouver.

You'll be there? Great. Any idea if other Tor folk will also?

Cheers,
S.

> Thanks for any comments on this. They don't have to be too structured,
> a quick comment from a veteran would be helpful.
> 
* I-D blocking-on-the-internet
* problem statement
- secure hardware
- firmware
- software
- linkability
  - over time
  - with FOO?
- fingerprintability (== linkability?)

* involving tor ppl
** TODO to: nick, tor-ass

https://down.dsg.cs.tcd.ie/misc/perpass.txt

topic: Let's remove gmt_unix_time from TLS
owner: ??
wg: TLS
thread: https://www.ietf.org/mail-archive/web/perpass/current/msg00168.html
synopsis: reasonable change, no barrier, good for Tor
draft: n/a

* notes
ben laurie on [[https://www.ietf.org/mail-archive/web/perpass/current/msg00322.html][perpass@]]: "The CFRG is chaired by David McGrew(mcgrew@cisco.com) and Kevin Igoe (kmigoe@nsa.gov)." http://irtf.org/cfrg
* emails with nick on tor-ass@
** From: Linus Nordberg <linus@torproject.org>
Subject: Re: [tor-assistants] IETF in Vancouver is going to be about privacy
To: Nick Mathewson <nickm@freehaven.net>
Cc: Tor Assistants <tor-assistants@lists.torproject.org>, Jacob Appelbaum <jacob@appelbaum.net>
Date: Tue, 10 Sep 2013 09:34:46 +0200 (7 weeks, 3 days, 9 hours ago)
X-Boundary: ____________________________________________________________________________________________________________________

Nick Mathewson <nickm@freehaven.net> wrote
Mon, 9 Sep 2013 19:41:20 -0400:

| > 1. How can Tor people help IETF to help us all? Do we want to get our
| > view on things and our knowledge about anonymity into RFC documents, for
| > reference and copying into other documents?
| 
| I think that getting people to realize that privacy in technology is
| mainly a matter of linkability is the key insight.

Good point. I'll keep that in mind.


| I think that there are a number of ways that people have been
| reasoning about security in designs that are not correct; I'll need to
| think more about that.  Perhaps it will turn into a blog post, but
| it's likely to be a contentious and flamebaity enough blog post that
| I'd almost want to start a personal blog for the purpose.

Reading that blog would alone help me frame discussions on lists and in
Vancouver. How can I help you get this started?


| I'll try to think of some more stuff.
| 
| > 2. How can IETF help Tor? Do we want some attention on our protocols,
| > design choices or maybe something else?
| 
| We need better options than TLS.

Did we start working on a design for TLS-minus-the-warts yet? Should we
bring such a thing to the IETF or would that be creating more trouble
than it would solve? Could it be used as a way of putting pressure on
the TLS wg, given they care at all about what protocol Tor uses? I guess
probably not.

Did we enumerate all things problematic with TLS somewhere? The
protocol, not any particular implementation. In Berlin I overheard Jake
discuss some of our current issues with ekr, who was not expressing
immediate disgust in any of the suggestions ("superencrypt" to avoid
fingerprinting, an argument for adopting Salsa20 and at least one more
thing that I have forgotten).


| Somebody should do something about the RNG problem. Unfortunately, the
| most problematic platforms (windows, phones) probably wouldn't listen.

A list of all the major PRNG implementations with solid technical
arguments would maybe be something that the IETF could adopt. That could
make a difference.

I think that the RNG issue is going to become even more important when
we start pushing towards more ephemeral keys.


| Cryptography-related working groups need to stop sucking up to NIST
| standards only. It seems as if this is the year that
| curve25519/salsa20/poly1305 finally gets standardized for TLS, but
| it's far from certain, and it's only the tip of the iceberg.

What are the alternatives? You mentioned ECRYPT in a post to
or-talk@. Could various ECRYPT II reports be used more than they are
today?


| >  I've heard that it might be
| > premature to try standardising Tor right now. Is that still the case?
| 
| Having seen the kind of silliness that sometimes pervades the TLS
| working group, I would hate for the Tor protocol to be subject to such
| ridiculousness.  Also, I'd hate to split the ecosystem into those
| protocols implementing "OpenTor" or "RFCxyzTor" and those implementing
| the latest Tor standard.  Perhaps I misunderstand how these things
| work, though, and there's a way for us to get the benefits without the
| risks.

I agree and I'd like to find out. I've talked to at least two
experienced IETFers who say they want to help Tor. They are Hannes
Tschofenig and Stephen Farrell, both on the perpass@ list. Would you be
willing to try figuring this out with their help? Please let me know if
you'd like an introduction in a non-public thread.
_______________________________________________
tor-assistants mailing list
tor-assistants@lists.torproject.org
https://lists.torproject.org/cgi-bin/mailman/listinfo/tor-assistants



--------------------------------------------------------------------------------

** From: Linus Nordberg <linus@torproject.org>
Subject: Re: IETF standardizing onion routing
To: Paul Syverson <syverson@itd.nrl.navy.mil>
Cc: tor-assistants@torproject.org
Date: Wed, 09 Oct 2013 23:17:17 +0200 (3 weeks, 1 day, 19 hours ago)
Reply-To: tor-assistants@lists.torproject.org
X-Boundary: ____________________________________________________________________________________________________________________

Paul Syverson <syverson@itd.nrl.navy.mil> wrote
Thu, 24 Mar 2011 10:36:04 -0400:

| On Thu, Mar 24, 2011 at 06:07:08AM -0700, Robert Ransom wrote:
| > On Thu, 24 Mar 2011 13:20:01 +0100
| > Linus Nordberg <linus@torproject.org> wrote:
| > 
| > > andrew@torproject.org wrote
| > > Thu, 24 Mar 2011 08:01:08 -0400:
| > > 
| > > | On Fri, Mar 18, 2011 at 01:16:14PM -0700, blibbet@gmail.com wrote 0.8K bytes in 26 lines about:
| > > | : 1) new IETF anonyminity list (in addition to their privacy list),
| > > | : and 2) IETF considering ontino routing standardization.
| > > | 
| > > | How can we help #2?  I both fear and am encouraged at such an effort.
| > > 
| > > Meto.
| > > 
| > > I'm currently sitting next to Hannes Tschofenig, on of the authors of
| > > draft-hansen-privacy-terminology and also present at the Boston meeting
| > > Nick went to.  We're now at a developer meeting in Prague precluding the
| > > IETF 80 meeting starting Monday.  As I understand it, he's heavily
| > > involved in the intersection between privacy and IETF.
| > > 
| > > Should I use this opportunity to try to make things happen in this area?
| > 
| > How could having the IETF take control over the protocols used in Tor
| > possibly benefit The Tor Project?
| > 
| 
| The real question is if they are likely to go forward on anonymity protocol
| standards anyway. If they are and come out with standards that some people
| are going to follow, then I assume Tor wants to be part of that rather
| than get into splits between the de facto standard and the official
| standard. (Can you say "Diffie Hellman parameter"?)
| It sounds like they are at least exploring going forward before bothering
| to get the Tor Project Inc. (or other relevant folks).
| 
| Note for those who won't know or recall: Back in the days of the Freedom
| network, ZKS kicked off an IRTF group that included some people from
| the IAB and with lots of drafts (not in that sense) written up by jbash.
| It faded with Freedom. If this does go forward, it may be worth
| reusing lots of that. (Or not Tor design was at most nascent at that
| point. And the world has changed in other ways.)
| Also its eventual demise may or may not also be a source of lessons.

Hi,

Picking up a thread from 1,5 years ago.

The world has changed even more now. Jake made a pretty huge impression
on some of the oldies in the IETF community in Berlin this summer. I'd
like to try to follow up at IETF88 in Vancouver, November 3-8, but I'm
not sure how this should be done and if I can do it all by myself. I
welcome more people to join and/or provide some ideas or even material
here.

I have a couple of questions in an email to this list from Sep 10
too. Anyone want to take a shot at them?

Also, Nick, did you ever write that blog post?



--------------------------------------------------------------------------------
** From: Linus Nordberg <linus@torproject.org>
To: Nick Mathewson <nickm@freehaven.net>
Cc: Tor Assistants <tor-assistants@torproject.org>
Subject: Re: [tor-assistants] IETF standardizing onion routing
References: <4D83BD8E.4010600@gmail.com>
	<20110324120108.GB3529@necrid.lewman.is> <87k4foaexa.fsf@nordberg.se>
	<20110324060708.32f87187@gmail.com>
	<20110324143604.GA87594@buridan.fw5540.net>
	<87wqlmta8y.fsf@nordberg.se>
	<CAKDKvuzGvptgEWSgGr2vZkhbBcdAGuLeW2goJgGz3ed2RFzFMw@mail.gmail.com>
	<CAKDKvuw5nDwEAXAF7n8Y=knvC-JbJ0Fx9pZx7WD6GNVBLMCb7w@mail.gmail.com>
X-Draft-From: ("nnimap+adbc:INBOX.lists.tor.assistants" 24909)
Reply-To: tor-assistants@lists.torproject.org
Date: Thu, 10 Oct 2013 18:52:24 +0200
In-Reply-To: <CAKDKvuw5nDwEAXAF7n8Y=knvC-JbJ0Fx9pZx7WD6GNVBLMCb7w@mail.gmail.com>
	(Nick Mathewson's message of "Thu, 10 Oct 2013 11:51:59 -0400")
Message-ID: <871u3toypj.fsf@nordberg.se>
User-Agent: Gnus/5.13 (Gnus v5.13)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Boundary: ____________________________________________________________________________________________________________________

Nick Mathewson <nickm@freehaven.net> wrote
Thu, 10 Oct 2013 11:51:59 -0400:

| On Thu, Oct 10, 2013 at 11:39 AM, Nick Mathewson <nickm@freehaven.net> wrote:
| > On Wed, Oct 9, 2013 at 5:17 PM, Linus Nordberg <linus@torproject.org> wrote:
| >  [...]
| >>
| >> Picking up a thread from 1,5 years ago.
| >>
| >> The world has changed even more now. Jake made a pretty huge impression
| >> on some of the oldies in the IETF community in Berlin this summer. I'd
| >> like to try to follow up at IETF88 in Vancouver, November 3-8, but I'm
| >> not sure how this should be done and if I can do it all by myself. I
| >> welcome more people to join and/or provide some ideas or even material
| >> here.
| >
| > I still wouldn't object to having Tor be in Informational RFC,
| > although I also don't see much benefit to it.  (Being a standards
| > track RFC would be completely wrong.)
| >
| > My experience with the IETF over the last several months (mostly)
| > lurking on the some mailing lists has been that standards -- even
| > informational standards -- get used as an excuse for not improving
| > things just as often as they get used as a reason to do things
| > properly.  I would hate to have anybody implement RFC-Tor in a time
| > when torspec-Tor had diverged.
| >
| > I'm not immune to counterargument here, but watching the sausage get
| > made has turned my stomach a bit.
| 
| On the other hand, I _would_ love to have our specs come up to
| RFC-level quality.  And the ego boost would be pleasant.  And I'm not
| convinced that I'm necessarily right about my fear that a Tor RFC
| would represent a protocol fork.  So maybe what I should do is
| converse with people who want to help work on such a thing.

I think this is the right thing, but only if you (or a substantial set
of Roger Dingledines or Paul Syversons) do too.

The SAAG chairs Stephen Farrell <stephen.farrell@cs.tcd.ie> and Sean
Turner <turners@ieca.com> are the one I think that you should start
talking to. They have multiple times offered to help with all the IETF
specific nitty-gritty of writing drafts.


| Or maybe I should just start rewriting our specs in my Copious Spare Time.

I should have time to help with that, if you think that would be of help.


| >> I have a couple of questions in an email to this list from Sep 10
| >> too. Anyone want to take a shot at them?
| >
| > I'll have a quick look if I can find it.
| 
| Ah. Apparently I'm the person who *did* answer the other time.

You answered the first email, yes. Thanks.

The follow up questions are in Message-ID: <87y575t9ih.fsf@nordberg.se>
(sorry for messing up with the threads in my email from yesterday). 

A quick summary of my questions:

1. Is there a design for an option to TLS and should we bring such a
thing to the IETF?

2. Do we have a list of all things problematic with TLS?

3. Do we have a list of major PRNG implementations with comments on
their security?

4. What are the alternatives to NIST standards? Something from ECRYPT II?

5. Shall I put you or some other Tor people in touch with Stephen
Farrell, Sean Turner or Hannes Tschofenig? They want to help us.

--------------------------------------------------------------------------------

* talking to nick <2013-11-01 Fri>
** standardizing onion routing
- fear is that ppl start implementing after RFC and not current
  protocol, which is evolving
- AP: bring seasoned ietf:er and nick together. stephen and nick sunday?
  ap linus: start email thread today
** tls AP's
Contents have moved to [[*TLS][TLS]].

*** chat log
<ln5> nickm: ok, found the older email (Tue, 10 Sep 2013 09:34:46 +0200). listing things from there:
<ln5> Did we start working on a design for TLS-minus-the-warts yet? Should we
<ln5> bring such a thing to the IETF or would that be creating more trouble
<ln5> than it would solve?
<ln5> and related: Did we enumerate all things problematic with TLS somewhere?                                         
      The protocol, not any particular implementation. 
<nickm> I think we should be involved in TLS1.3
<ln5> nickm: and then some things that were discussed in berlin, with ioerror:                                         
      ""superencrypt" to avoid
<ln5> fingerprinting, an argument for adopting Salsa20 and at least one more
<ln5> thing that I have forgotten"
<nickm> ln5: I think that a revised laundry list would be a fine thing.  There                                         
        are a bunch of items.  Some of them , I've heard that people already                                           
        want to have in TLS 1.3:                                        [17:56]
<ln5> nickm: sounds plausible. i'm not a person with a deep knowledge of tls                                           
      though. i can bring up issues though, and try to argue.
<nickm> For example, encrypt as much of the handshake as possible. Encrypt                                             
        record types. Support the ciphers I like (agl is already pushing for                                           
        this, since he likes them too).                                 [17:57]
<nickm> ln5: more TLS laundry list items: encrypt-then-MAC as an AEAD mode.
<Yawning> agl's latest proposal is poly1305 + chacha right?
<nickm> Yawning: yes, and I believe he also likes curve25519
<nickm> ln5: minimize necessary observable differences between TLS                                                     
        implementations.
<Yawning> why poly over the sha-3 finalists?                            [18:03]
<nickm> faster.
<Yawning> (not neccecarily keacc)
<nickm> polynomial MACs are faster than cryptographic digest-based MACs.                                               
<nickm> They have limitations, which is why you only use them in some                                                  
        environments, but for this one they work fine
<Yawning> all the polynoimal macs have a "god help you if you reuse the iv"                                            
          property right?
<Yawning> (not that it's uncommon or problematic for tls)               [18:05]
<nickm> Right. AFAIK, every system that has an IV has the "you can't reuse it"                                         
        property.                                                       [18:06]
<nickm> ln5: Oh, and of course I want gmt_unix_time to go away.         [18:07]
<nickm> ln5: or at least for it to be marked as problematic and deprecated or                                          
        something                                                       [18:08]
<nickm> Wishlist: encrypt packet boundaries. :)

<nickm> ln5: oh, here's another TLS item.  People should admit it when they                                            
        are adding things that are hard to implement in constant time in pure                                          
        C.  No new ciphers or suites should get added unless the proponent can                                         
        point to constant-time implementations of those things on several                                              
        platforms.                                                      [18:18]

<ln5> nickm: "encrypt packet boundaries"? what is that?
<nickm> err, make that "encrypt TLS record boundaries".  Basically, right now                                          
        in TLS it's clear what the record sizes are.  This makes some content                                          
        fingerprinting attacks a little easier to run.                  [18:21]

<Yawning> (are there any block cipers that aren't a nightmare to implement in                                          
          constant time?)
<nickm> Yawning: Most (All?) of the SHA3 finalists (yes I know you asked for                                           
        block ciphers) were easy to do in constant time IIRC.
<nickm> Yawning: Similarly for many (most? all?) of the stream ciphers in the                                          
        eSTREAM portfolio.                                              [18:23]
<Yawning> there's known ways to take either stream ciphers or hash functions                                           
          and get block ciphers so yeah                                 [18:24]
<Yawning> (there's nothing horrifically broken about BEAR/LION/LIONESS right?                                          
          apart from 'slow')                                            [18:27]
<nickm> BEAR and LION are problematic.  LIONESS isn't.                  [18:29]
* IETF88 in vancouver
** IEPG sunday morning
*** Geoff Huston on google services
How many users do 8.8.8.8 have?

About 7.2%, shown by buying ads and doing some probing.
Of which, about 5.3% using only 8.8.8.8.
** fragmentation and extension header support in ipv6
** paul vixie on the time value of security features in dns
source address validation, bcp38
** people
- andrew biggs, appsawg <2013-11-04 Mon>
** appsawg <2013-11-04 Mon>
- draft-ietf-appsawg-rrvs-header-field-01.txt
  Require-Recipient-Valid-Since
  Alexis: use a header, not an SMTP extension
  Barry +1 pushes back against putting protocols in headers.
  NN0 asked for mandatory encryption and NN1 said OTR.
- draft-ietf-appsawg-uri-get-off-my-lawn-00.txt
- dnssd -- dns service discovery

Security part.
- peter saint-andre on tls in xmpp
  - used to have separate port for encrypted (5223), for client-server
  - rfc3920 gave starttls on 5222
  - rfc6120 upgrades cipher MTI
  - about 90% client-to-server is tls
  - server-to-server is often tls but not authenticated (that is tls+dialback, not pkix)
  - https://xmpp.net is the im observatory
  - draft-saintandre-xmnpp-tls [[file:~/Persistent/u/ietf/internet-drafts/draft-saintandre-xmpp-tls-02.txt]]
  - working on DANE/DNSSEC, POSH, key pinning, CT
  - google talk is not going to work when ietf toes with the new manifesto
  - tls1.1 may but tls1.2 is preferred
  - preferred cipher suites with PFS and lots of bits (256)
  - is opprotunistic enc ok? maybe, discuss
  - multi-tenented environments? dna/dane/posg the solutin?
  - draft-sheffer-tls-bcp might be useful
- certs in transit for SMTP, starttls
- accessing email services over tls, alexey
  - rfc2595 and rfc3501 says use dnsname subjectaltname
  - rfc3207 says not so much, rfc5804 says [fixme]
  - rfc2595 says 3des is madatory for imap and pop3
  - ned freed has tested what's offered by imap providers in the real world
  - todo (even w/o dane):
    - update cipher suite recommendations, do recommend pfs cipher suites
    - recommend tls1.2 (draft-moore-email-tls)
    - draft-melnikov-email-tls-certs says specify how servers should be verified
    - document imaps and pops over tls (draft-melnikov-pop3-over-tls
    - submission over tls on port 465? request new port?
    - draft-moore-email-tls
    - need record tls chipher in received header standardised
  - draft-melnikov-email-tls-certs vase on rfc6125
- draft-moore-email-tls-00 by keith moore
  - all email traffic should be tls-encrypted
  - concentrate on mua-msp (imap, pop, submission) and opportunistic enc is not sufficient
  - a tlsa record pointing to an mta [...]
  - we still need end-to-end encryption (pgp, s/mime)
  - self-signed can be ok for small deployments but use certificate pinning (?)
  - implicit tls (i.e. on a ssl port) is preferred over STARTTLS (bc we want tls all over anyway)
  - server MUST suport tls, may support starttls
  - dns records should mx, may srv, may tlsa (with dnssec only)
  - should dnssec
  - monitor things, like certificate expiration
  - pint is to raise the bar
  - is a signed tlsa record a replacement for a server cert signed by a known ca?
    - don't think so
- john on sip security overview
  - baseline sip signaling
    - digest auth, tls, s/mime
    - little adoption of tls, even less s/mime
  - media security
    - srtp "gives way" dtls/srtp
    - alternatives like zRTP (DTLS?) "in the marketplace" (?)
- http and tls
  - separate port 443 and a separate URI scheme https://
  - tls for http:// uris? come to httpsbis  on tue
  - the proxy problem
        - content filtering, access control, virus scanning
  - ca attack vector / escape valve
  - emerging tendency to put more info in clientHello (interop issues?)
  - one origin per connection  (SNI?)
- discussion, pls keep on "how to organise" rather than detail
  - stephen: start a do-foo-over-tls WG? +1 from paul hoffman
  - dave crocker: one single group will be hard
  - stephen: don't block ppl who wanna work
** radext <2013-11-04 Mon>
- dtls, alan dekok
  - no open issues
  - radsecproxy and jradsec (?) implements it
  - sam says libradsec does it too, i didn't object
- NAI [something]; alan
  - rfc4282 (The Network Access Identifier) is wrong wrong wrong
  - normalization done at the edge or the core?
  - we know we can do it at the edge but no one does it
  - it's easier at the core (i.e., proxies)
  - not much feedback fro ni18n people
- ieee802ext draft, bernard
  - one open issue: 153 (Access-Info) attribute
- fragmentation of RADIUS packets, perez
  - draft accepted as a WG doc in august -13
  - MUST have user-name in fragments, for proxies
  - how to implement a proxie according to rfc6929 (extensions) but
    not this draft
  - issues: proxy-state-len attribute
  - issues: CoA handling
    - [wtf is CoA?]
- dyndisc, sam, draft-hartman-radext-bigger-packets-00.txt
  - packets with more than 4k octets
  - handle PMTU (path MTU) correctly
  - increase max pkt size if over TCP and TLS (hmm, "and"?)
  - issue: capability negotiation but what we want is probably
    capability discovery
  - issue: error response
- NAI-based peer discovery, stefan winter
  - didn't happen -- stefan wasn't there
** webrtc / rtcweb
- jsep update
** sam and his idea that i should do DH for abfab
Met Sam at the radext meeting and he'd like to volunteer me for doing
DH in abfab. This is GSSAPI layer.
** httpbis <2013-11-05 Tue>
- http://etherpad.tools.ietf.org:9000/p/ietf88-httpbis-1
- what's new in http/2.0
  - plan is to implement upcoming -08
  - frame lengths fixed to 16k
  - defined flow control (both on connection and stream level)
  - improved error handlings
  - improved settings negotiation
  - simplified header compression
  - CONNECT added
  - clarified mapping from HTTP onto HTTP-2.1
** httpbis, security <2013-11-05 Tue>
- [[file:~/Persistent/u/ietf/internet-drafts/draft-ietf-tls-applayerprotoneg-03.txt][ALPN]] didn't meet any objections
- [[file:~/Persistent/u/ietf/internet-drafts/draft-ietf-httpbis-header-compression-04.txt][HPACK]] is about header compression for http/2.0
  - thwarting CRIME like attacks
  - DoS mitigation (I think)
  - huffman coding, does it leak information?
*** opportunistic encryption, followup from berlin
- http://etherpad.tools.ietf.org:9000/p/ietf88-httpbis-2
- there's a draft [name?] [by whom? "mark"?]
- threat model, passive attackers
  - firesheep
  - google streetview
  - pervasive passive monitoring
  - not considering active attackers
- use of encryption baked into identifiers -- user has no control, server authn lumped in
- solution: alternate service layer
  - leverage ALPN protocol indentifier to indicate security properties
  - new layer "alternate service", 
  - goeal: netgitatie TLS for http://URI
  - "two states to three"
    - http uris (no authn, cleartext) + https uris (authn, encryption)
  - why alternative services?
    - abstracting uri from underlying network servicce
    - http:// uris over tls
    - upgrade to http/2.0 on a different port (or host)
    - load balancing / shifting
    - separation of origin from location [?]
  - ALPGN protocol identfiers
    - use ALPN protocol identifiers to indicate underlying transport
      (TCP, SCTP) and intervening layers (TLS)
    - e.g. HTTP/2.0-TLS
  - relaxing the protocol
    - deployment cost for tls is high
    - mitiating passive attacks doesn't require srever authn
    - prop: relaxed tls protocol identifier 
    - [missing some stuff here]
  - deployment
    - we will NOT mandate support for HTTP-URIs-over-TLS
  - open questions
    - extend to mitigate active attacks?
  - will passive attackers move to active attacks?
  - confusing users? encryption [and authn?] on http:// uris
  - is tls for http:// the right goal?
- paul hoffman has a proposal
  - first, go to dns and look for indications of existance of tls
  - could work together with the above suggestion
- philipp hallam-baker has a proposal which looks like hoffmans
- risk of not requiring server authn is that ppl may stay there
- mats [?] ericsson is sceptical to [?] and wants servern authn
- NN0 says we won't make it (==server authn) with the current CA
  system
- passive attack looking at request headers; don't send request in
  cleartext and then move to encryption only later; traffic analysis
- we could try to make sure that the unencrypted data pre the
  encrypted not leak any data
- why do ppl not deploy https? slower
- chair (mark): we're not going to mandate http over tls
- alternatives: 1. do nothing; 2. provide mech indicating "try tls"; 3. do try tls
- stephen: the third options is the right option
- the options are
  1. do nothing -- hope for https
  2. opportunistic encryption w/o server authn for HTTP (just for
     passive attacks)
  3. opportunistic encryption with server authn and downgrade
     protection for HTTP -- no reeequirement on http/2 when not
     available
  4. require tls
- proxies topic brought up by mats [the swede, from ericsson?]
*** etherpad notes
# HTTPbis Working Group Minutes
IETF 88, Vancouver
        
 *** SCRIBES - Please:
    * Minute all ACTIONs and discussion outcomes
    * Capture who is speaking
    * Use markdown
    * Leave a blank line between speakers
## Tuesday Session
### ALPN review [Stephan Friedl and Andrei Popov]
Stephen Friedl presenting
WG member are encouraged to review and provide feedback.
?? Chang : This won't work with session resumption.
Stephen Friedl  : It will not work unless you renegotiate.
EKR : You can't change the cert and ALPN codepoints, but you can resume.
Michael Tuexun : Is there a reason you don't provide this for a general mechanism?
SF : You need to register the name.
MT : I want some binary data in there, is there a reason you did it this way?
SF : We did it because the port number is not reasonable to have different
Roberto Peon : This is there to negotiate the protocol, of anything else would be very strange.
Mike Bishop : There is another extension that can be used for passing arbitrary application data, but I cannot recall the RFC number
 **  RFC 4680 **
Sean Turner : If we're going to make it expert review, should it be only security or only apps or some combination?
Yoav Nir : Expert review should be in security because it can be used for other protocols.
Eliot Lear : When my mother offered chocolate or vanilla, I always took both.
Mark Nottingham : I was concerned about how registration works, but I think we're ok there now.
### HPACK review [Roberto Peon]
Actions by the Security folk to review and analyze.  Mark and Stephen to discuss how to get adequate review, now that the documents have settled down.
EKR : Is it correct that the attack is effectively a brute force attack if you can't guess the secret.  Are you saying that is weaker now?
Roberto Peon : I'm saying that was weaker when you are using a stream compressor.
EKR : The minute you guess the entire thing you're done.
EKR : You are assuming the secret is a high-entropy value.
Stephen Farrel : Do we know someone good at analyzing it?
RP : There are a few people have looked into it.  It was not about HPACK, but on the general use of Huffman.
Stephen Farrell : What is the timeframe that an analysis is useful?
RP : It's always easy to compress nothing.
NM : For the WG, we wanted to finish this up by next year, and we're on track.  We are getting implementation experience.  If we get this done by middle of next year, and it explodes, then we'll have problems.  But this is something we can get fixed with HTTP/2.1 or its successor.  This protocol needs to be easier to version.
Stephen Farrel : So we really want analysis within the next six months.
Yoav Nir : This table needs to be in both the client and server, and needs to be rather large.  It's possible that the table might not be optimal in the future.
RP : We could just go with plaintext encoding, or we use another table or version the protocol.  We know that it's possible to transmit a new table, but we're not sure it's really worhtwhile right now.
EKR : On the threat model, most of the chosen plaintext attacks have exploited some functionality of protocol to repeated induce response.  As you suggest, cookies could use arbitrary entropy.  What we need to be observant about is other forms of data that are lower entropy that you can get clients to send repeatedly, like credit cards, passwords, and PINs.
RP :  I agree the smaller the thing the easier it is.  If I have to guess a PIN, then I think their security model is already broken.
EKR : We are changing the security model somewhat.
NM : I think it's worth explain our proposal on cookie crumbs.
RP : We're looking at breaking cookies, but it's not clear this is making things easier or harder.  If the encoder is naive and puts a small secret on its own, then you've reduced the total secrecy.
Jim Rosekind : IFirst interesting to note that the uncompressed case calls for the client to ask repeatedly, and some servers will get pissed off about that. 
JR : Second thought is about using the static table. If the result took a data set, and you run this numerous times and analyse the space you actually need to explore.
RP : That was something the paper I talked about earlier, one could pare down the state space based on the bits on the wire.  It was a very small reduction -- it was still exponential.
Stephen Farrel  :  I'm wondering if the headers would be impacted by this.
RP : One of the things about having a compressor like this is people might use larger secrets, because the cost is less.
Paul Hoffman : I think you'll need to solicit for those reviews outside of just security.
Stephen Farrel : Between us we should try to find some way of getting review.
Lucy Lynch :  There are a lot of people around that have experience in this, but not exactly in the same problem space.
Jim Rosekind : when you look at this pseudo random cookies that actually use a pattern.  Using a greater amount of entropy can reduce the benefit from huffman encoding.
RP : With all due respect, you're wrong (-:  This is generally base64 encoding, so it's already reduced.
JR  : You're right that is using a reduced input set, but the tables might not favor some of the inputs.
YN : I thought one of the goals is to change to use binary encodings.
RP : We can't quite do that because of interop problems with 1.1
RP : Right now, the Huffman tables are different for requests and responses.  The differences are noticable, and we've have talked about using a third table for cookies, but we haven't seen a good benefit there.  We haven't actually seen the compressiong being larger so far.
JR : It is much more plausible if you're using ASCII characters in unif ways, but once you bring in the english language it gets easier.
RP : I agree but we haven't tried that yet for complexity reasons.  We haven't made an issue for that yet.
Martin Thomson : There's plenty of places that such things show up, not just cookies.
RP : Part of the problem for attackers is you don't know where the secret is.
### Encryption and HTTP/2 + Opportunistic Encryption
 Mark Nottingham presenting
 
 ** NOTE: slides are _NOT_ on the materials page**
Ted Hardie : One of the big questiosn from yesterday was why would anyone want an HTTP/2 connection that was plaintext.  If we can go from two states to two by eliminating the cleartext then we're in a better place.
#### Alternate Proposal for Discovery
Paul Hoffman presenting
Use DNS to determine if the server for http: likely has a TLS equivalent, instead of using HTTP headers.  The two are not necssarily orthogonal.  This is a mechanism difference, not a conceptual difference.
Phil Haram-Baker : In my proposal, you can find the information in DNS because that's what DNS is for.  The guidance could be used for multiple services.
MN : And that's why we described this in two separate layers.  One is what to do, the other is how to figure out if you can.
RP : We experimented with something like this a long time ago, and I'm not interested in hearing about the mechanisms, but I'm much more interested in knowing if this increases our overal security.  I'm not sure this actually increases the aggregate security.  This third level might actually decrease security because it confuses users.  It might make people thing that opportunistic encryption is good enough when it actually isn't.  I used to think this was a good idea.
William Chan : I talked to various people on the Chrome team, and there some concerned about the relaxed mode.  We're more interested in doing authentication always, even for HTTP:  I am quite excited for encryptiong HTTP URIs.
NM : I would love to have the authentication.  If we can good get good deployment, then it's great.  From a se
EL : Concerned this introduces a new form of MitM.  If yu have this header, that now says you can use relaxed, a MITM can insert the header or replace a 301 with a header, and the server thinks it has an encrypted tab but is really sending data through the MITM.
EL : Why would the attacker not just proxy HTTP, and I'm just saying this is another avenue.  I'm also not sure we understand the consequences of adding a new property about saying "don't bother to verify the certificate" and confusion about unathenticated encryption versus authenticated encryption.
Salvatore ?? : I am worried we are putting to many things together, and changing things on the fly.  It might be too much to manage.
NM : I think this is been kind of implicit in everything we do, because we might be switching to a new connection protocol.
YN : I think there is value protecting against passive attacks.  Active attacks are 10x more expensive.  I don't see much point in having authentication for HTTP because we have HTTPS.  Having encryptiong wihtout encryption has some value, as long as user-agents don't say you've got protection.
Larry Masinter : I was thinking about cases where encryption might introduce excessive overhead, and one is delivery of video.  There is value in encrypting the headers, though.
MN : This is a negotiation -- the client can request it, and the server can offer it.
RP : It is incorrect to say there is not benefit to encrypting video.  It is useful for the content provider and for the distributer.
Tim Bray : I tell most people to just use TLS.  For you information, the arguments against encryption are becoming less and less convincing.  I think we should keep pushing the rock uphill because we're starting to win.
MN : One of the conclusions we have is whether server authentication needs to be lumped in.  Does that mean we push everyone to just use HTTPS, or is there still benefit to HTTP.
Rohan Mahy : A lot of concerns are about what the user experience.  To me it's clear -- if you are doing HTTPS, then here's the list of things to get the green locked icon.  if it's HTTP, then there's no immediate indication.  You just do it, and not tell enybody about it in the default case.
NM : By the way, that's what's in the draft.
Alissa Cooper : We should think of this as a gift to users (-:
Ted Hardie : I like the idea of not giving the browesr a signal of opportunisitc encryption.  But users are not the only side in this.  There are classes of software that might provide a false sense of security.  We can get a benefit, but it might cost us some authenticated encryption, and that is a serious problem.  I think we should just do HTTP/2.o is always authenticated encryption.  If we can't get to server authentication always, then make it hard or hidden to do opportunistic.
Brian Dixon : From the perspective of opportunistic, it should be acceptable to use self-signed, but still require authentication.  This might lower the bar, but this might still be of benefit.
Patrick McMannus : People don't always have all the information about what the protection there is if we rely on HTTPS only, so having encryption always is a good thing.  I think it's better to require authenticated, since we really just get one chance.  But if all we can really do is HTTP-relaxed, then it's still moving the bar forward.
?? : Most browsrs give you a place to enter certain configuration options on a per-host basis.  While I don't think we should expose this to users, but I think there is benefit.
Johan ?? : I'm a little skeptical of doing encryption at this level.  Especialy as it plays with DNS.
Richard Barnes : Unauthenticated encryption is the new plaintext.  This means that the worst case is that you are protected from passive attacks.  We should shoot for authenticated encryption.  If our goal is to increase the number of places that authentication and integrity protection is increased, I'm not sure these goals get us there.  If we require authentication, it means people need to get the proper credentials at scale, but we're not there right now.
Christian Huitema : I am skeptical about the amount of protection you really get.  I am concerned about the case where we first send the request in cleartext, with all of the potential traffic analisys information exposed, is not providing any benefit.  We should think about the security considerations about this, and maybe have other ways of determining this information, or require another trip in order.
NM : We did talk about this in Seattle, and if people are going to do this for security purposes, then you would block this data.  Such as sending a very minimal amount of infomration in an exloratory request or use DNS.
RP :  I want to point out why people don't deploy HTTPS.  It's not because of the cost of getting certs, but because HTTPS is significantly slower.  People doing commerce are very interested in performance, and are unlikely to deploy unless HTTP2/ with TLS is as fast or faster. Our experimentation at Google has shown that HTTPS is as fast or faster for a large number of cases.
RP : < note taker missed it >
Stephen Friedl : I agree with Roberto.  I don't trust locks on my browsers, and heaven forbid I explain to laymen.  The only way to do this is HTTPS (with authentication) only.  No more HTTP.  And we should be rigorous about it.  I am in the camp to push everything to HTTPS except for the small set of cases where it doesn't make sense.  For ALPN, we should be more formal of how to register the types.
Rob Trace : I would like to have a secure web, but there is a long list of corner cases where it's applicable to have HTTP plaintext.  It's hard to claim this is a security feature, since you still have to treat the content in and out as insecure.
EKR : Is HTTP/2-over-TLS only still on the table?
MN : It appears that the position of HTTP/2. over only TLS is too extreme.
EKR : Doing nothing is stupid.  What I think we're arguing about is whether having the relaxed version lowers the bar too much.  I think determining how many would do the right thing, or at least do opportunistic is tricky and we don't know.  I think opportunistic TLS is worth doing.
MN : People have expressed concern about confusing people about the security state, and I don't think that will be the case.  Server admins will open a browser and look for the indicators.  If there are none, then they don't think they have any protection.  As for commernce, I'm not sure that's an important thing anymore.  What's important is what happens out-of-the-box.  If any encryption requires doing more than installing the software then people won't be doing it most times.
EL :  One of the thigns I was thinking about was to do the discovery inline instead of a referall mechanisms.  I think having all the security and HTTP people helps informs the discussion for perpass.  A few people made some economic assertions,  these are  interesting questions for researchers to look into.  Also, the IRTF meeting is discussing how to get researchers and those willing to pay for it together.
PHB : The original goal for HTTPS was to have the same level of trust for people buying things online as buying things in a store.  So not turning on the lock if you haven't authenticated is good.  Deploying opportunistic TLS increases the work attacks have to do which is good.  But for the other attacks, where someone could downgrade someone from HTTP/2 to HTTP/1.1.  Do you really want to re-encrypt YouTube vidoes each time?
AUDIENCE : YES
PHB : Once you get past that, you are really talking about doing strong crypto or crappy crypto.  You could probably collapse the work factors to one or two choices.
Keith Moore : The decision this WG is making has a long term effect.  I think we need to look beyond the current threat or the past threats.  Right now active attacks are harder than passive attacks.  But if a passive attack is feasible, then an active attack is also feasible.  I'm not sure there's a benefit to do opportunistic because you can be downgraded, unless you can absolutely prevent it.
TH : What Keith said, but also this is an estimation problem (as EKR pointed out).  We are taking the current state and adding opportunistic encryption, which prevents FireSheep.  Does adding opportunistic reduce the number of times people get good certs?
EKR: If we provide the unauth mechanism, [EKR line noise]
TH: If we ask "should HTTP/2.0 be TLS-only?" we might come to a different conclusion.
RP : My definition of commerce might be very different of yours.  Pintrest doesn't actually sell anything, but they still add value.  Commerce doesn't always mean adding things to a cart and checking out.  Pintrest doesn't have a competitor right now, but latency matters.  Second, it is far easier to add authentication later than to remove unauthentication later.  If we weaken it by adding this third thing it will be hard to fix.
?? : Trying to protect against just the passive attack is silly.  One thing is very clear is that if I have a HTTP URI, I want to try to use it in a secure way.  If I use it in a secure way, I want to really be secure.
MN : If we did do opportunistic, do you want to see mitigation of downgrade attack. [Yes]
Stephen Farrel : I think there's value in trying to mitigate the passive attack, so I think the do nothing option is really stupid.  Trying to insist on HTTPS everywhere is not feasible or scalable.  I think the third option is the right approach.
MN : I think we have an opportunity to improve performance with HTTP/2
Will Chan : One barrier I've heard is about mixed content.  Even though I'm a big fan of telling people to just use HTTPS, but I need third-party ads and what do I do?  While I want to got HTTPS only, I think there's still a lot of benefit because it reduces the barrier of entry.
EKR :  I think you should consider option 0, and you consider TLS for HTTP/2 always.  I think we should do something, and having some option for the server to indicate it only wants to do the authenticated mode.  Is it ok to have mixed content?  We need to consider the policies that are involved in these cases.
PHB : I think a lot of the argument is over a choice that doesn't exist.  One is whether you have authenticated cert or not, since the IETF doesn't strongly define what authenticated really means.  The only choice that can be made is whether the client can be allowed to turn off its root criteria.
Roy Fielding : I don't think you can require HTTP/2 to be encrypted always, given all the places that HTTP servers are deployed.  I could get behind that if you use HTTP you use a secure transport protocol, ether it's TLS or SSH or something.  I don't think it's a technical argument, but there is a social argument that you can and probably should make.
#### What does the WG Want?
Mark Bishop : Just want to be clear, that for 2 and 3 that there's an option to go better, but no requirement.
LM : One considerations is if users would be presented with information about those connections. Which of these include those dialogs/information?  And what is the performance impact?
Dixon : To clarify server auth, it should include both CA-based and DANE-based.
Rohan Mahy: I don't know what #3 means with the word somehow, especially in a technical context.
Gabriel Montenago : Remember what the desired final state is to increase the use of valid TLS.  Where is that in these choices?  I think plaintext has an important place in the world.
Barry Leiba : You should be looking for who cannot live with some of these.
0) Don't know (yet) 
[strong humms for can't live with]
1) Do nothing - hope that hTTPS gets more adoption
[strong humms for can't live with]
2) Opportunistic encryption w/o server authentication for HTTP URIs - just for passive attacks
[ less strong for can't live with ]
3) Opportunistic encryption with server authentication AND downgrade protection (somehow) for HTTP URIs; no requirement upon HTTP/2.0 when not available
[ weakest  for can't live with ]
4) Requre secure underlying protocol for HTTP/2.0 (at least in web browsing)
[ weaker for can't live with ]

** irtg <2013-11-05 Tue>
- nick feamster presenting 
- we don't know how widespread the internet censorship is, see ONI
  (open network initiative) for what we know
- also free states do some, but how and when is it done? is it
  pervaise?
- reasons for it: political stability (UK), national security (US) ,
  social values (autralia)
- what we think of as exceptions (wrt censorship) increasingly become
  the norm
- conventional censorship: alice - censor (fw) - bob; censor is
  blocking or just making the communication sloooow
- how widespread is internet censorship?
- designed to coincide with f.ex. an election? measuring this together
  with the tor project
- the user should be able to conceal the fact that s/he's using an
  anti-censorship tool; tor is not such a system
- monitoring censorship (not a comprehensive list, not listing ONI,
  citizenlab f.ex.)
  - herdict by the [brooklyn center?]; taking user reports ==> broad
    coverage but no confirmation
  - google transparency report; monitor reachability of online
    services
- challenges
  - censorship is ill-defined, f.ex. i18n -- do google think you're
    interested when i am?
  - performance problems may be confused with censorship
  - measurments tools can be blocked; share problems with
    internet non-censorship measurment
  - measurments tough to characterize
- problem with current approaches
  - biased by what users choose to report
  - lack of open measurements
  - not general -- looking at limited services
- design requirements
  - easy to install and use
  - cross-platform
  - flexible; ooni is a start but we want a DSL that can be run on
    more tools in order to repeat them
  - secure
- target platforms
  - BISmark -- home routers
  - android
- tests
  dns lookups, spoofing, tampering
  - tcp connect
  - http request, host tampering
  - bridget [?]
  - block page detection
  - web performance measurment
- circumvention
  - deniability of doing circumvention
    - easy to hide contents, hard to hide the fact that you're using
      it; theme of the research going on the last 10-12 years
    - let user-generated content help defeat censorship by hide data
      in it
    - how to embed the message
    - where to embed; must agree on a subset of content without any
      immediate communication between alice and bob
    - designed for deniability
    - tor pluggable transports
  - bootstrapping -- how do you find bridges?
  - general approach: use a helper
- manipulation
  - analysis of twitter behaviour of propagandists
  - sock-puppeting; false appearance of independent speakers
  - astroturfing; false appearance of a grassroots movement
  - detecting propaganda; four properties
    - higher fraction of retweets
    - more bursty tweeintg volumes
    - higher daily number of tweets
    - [one more]
- bobble: bursting the filter bubble

** tls <2013-11-06 Wed>
- ALPN
- TLS BCP
- updating cipher modes
  - encrypte-then-mac
    - extension
    - q: insecure fallback mech
    - q: [?]
  - use AEAD
    - define new AEAD for EtM, 
      q: previous version support - define AEAD for earlier TLS
      q: need to resolve plaintext len for MAC computation
  - ekr: all browsers i know of (3) do all fall back to ssl3
  - humming shows more interest in EtM for AEAD than for "ordinary"
    ciphers (and for working on both)
- [[file:~/Persistent/u/ietf/internet-drafts/draft-agl-tls-chacha20poly1305-02.txt][ChaCha20]]
- isrg: preference for chacha over salsa bc it's slightly more
  efficient
- TLS PRF considered harmful
  - suggestion: TLS_MAC construct only for public data, and a TLS_KDF
    only producing private key data, TLS_RANDOM_DATA only for prng
  - isolated from each other
- Starting on TLS 1.3 (ekr)
  - "i did a bad thing" (i was late)
  - objectives
  encrypt as much of the handshake as possible
  reduce handshake latency
  reevaluate handshake contents
  reevaluate record protection mechanisms
  focusing on new handshake flows
  - new handshake flows
    "false start" explained
    falling back under prediction failure
    - reduced RT handshake with privacy
      lots of things from marsh ray
      basically, this is false start with the CCS moved (changecipherspec) up 
      best you could do with a one-RTT handshake

      The Finished message is the first one protected with the just
      negotiated algorithms, keys, and secrets.  Recipients of Finished
      messages MUST verify that the contents are correct.  Once a side

      maybe not problematic bc none of the peers are sending
      application data before it sees Finished?

      making PFS harder, requires renegotiation
      
- [[file:~/Persistent/u/ietf/internet-drafts/draft-rescorla-tls13-new-flows-00.txt][draft-rescorla-tls13-new-flows-00]]

** technical plenary <2013-11-06 Wed>
- bruce schneier
  PRISM, UPSTREAM, fairview, blarney (at&t), little (l3), remedy (bt), 
  QUANTUM (packet injection from the backbone) run on TUMULT
  RAKE, EGOTISTICALGIRAFFE, BLACKHEART, VAGRANT
  MARINA, PINWALE, BULLRUN (subverting products)
  NSA turnted internet into a gigantic surveillance platform
  we don't know much names, but that's ok since knowing details will
    lead us to hunt yesterdays problems
  it's cheaper to store data than to throw it away
  systems that never forget, this is the way computers work
  basic alliance between government and corporate
  surveillance is the basis for internet business [?]
  metadata == surveillance
  the us has a privilged position on the internet
  nsa might have breakthroughs on ecc, [?] and rc4, doubt AES but who knows
  there's been losses for corporations due to the leaks
  things to do: encrypt more, target dispersal (more email servers)
  pgp is too hard, otr is doing great and so is disk encryption
  better assurance -- the software doing what it's supposed to do
  leverage the economics, physics and math
  largely this is a political problem
  point solutions won't actually change anything
  "you can't reign nsa bc then china wins" haven't heard this yet, but we will
  we'll win "tell us about it" but not "stop doing it"
  stop the balkanisation of the internet
  stop run this from the us
  this is larger than the nsa, it's about big data
  solving is going to take decades and i wan't to get started
- brian carpenter, university of [?]
  - ancient traditions
    rfc1126 (1989)
    rfc1543 (1993) mandates security consideration
    rfc2316 (1998)
  rfc1636, rfc2316, rfc6462 (2010) privacy workshop
  1996, long debate in the IETF, result was rfc1984 signed by the IAB & IESG,
  recommending encourage policies to allow strong crypto, i.e. export controls away
  1999/2000, wiretapping discussions, bothering the IETF, privacy concerns and security loopholes
  copmlicated debate, result rfc2804 signed by the IAB & IESG, a sublte rfc
  "ietf has decided not toconsider requirements for wirtapping as part of the process for creating and maintaining IETF standards"
  and "wiretapping mechanisms should be openly described"
  IETF should be able to make the internet secure including protecintg privacy
  we'll have a notehre long debate
  i hope for improvements in privacy protection
- stephen farrell
  it's an attack and that's how we should treat it
  it's not unique -- others are doing the same... or will
  the scale is interesting and new
  a purely technincal response will not solve this but we should treat the attack as we usually do
  affect the cost of pervaisive monitioring
  some of them are short-term "pint changes", otehrs will take time
  - if we're serious, some changes must happen
    MTI vs. more-than-MTI
    confidentiality vs. packet inspectin
    anon/pseudonymity vs. authent/law enforcementent/advertising
  get some changes made or started more easily whil the news is fresh
  but don't so quick we'll do it wrong
  NOTE: "we" is the IETF _and_ each of us when outside the IETF, i.e. when going back to our companies
  - crypto-implementations worries
    PRNG, side-channels
    [hw crypto thing]
  perpass@, "no crazies" ;) but mostly triage
  talk openly, but we've seen too much self-censory
  have a very early draft on modelling threat models
  PFS in TLS
  appsare might have a new WG for this
  encourage operationl changes, more local IXP:s?
  tricker thingsJ  privacy BCP (draft-cooper-ietf-=privacy-requiremetnts)
  more-than-mti -- closer to security by default, no clear outcome
  - relevant issues, from hard -> very hard
    turning on tls everywhere for the web
    end-to-end security, practicality
    webrtc and iot making it all worse?
    fingerprinting and traffic analysis from RF->app layer
    corporate cloudy privacy-busting "will be affected if we succeed"
  - conclusion
    it's an attack, on  a new scale
    goal: make it more expensive
- open mic phb: not only look at defensive; look at the economic

  benefits that they can provide -- look at tls; a real problem with
  bullrun spending money on undermining trust
  
  crocker: thank you, your talks was the right set of things; corp cooperation, how can we do about this , or how would crypto help here, bruce?

  bruce: crypto makes it harder, if it's encrypted They have to after
  only high value targets, the more we use encryption the more we
  raise the coset. encryption makes them have to go after the valued
  targets and not everybody.
  
  james v[?]: bruce says improve target dispersal but farrell didn't
  bring it up; if the ietf wants to help
  
  eliot lear: there are tradeoffs here, "cyber security tradeoffs",
  ietf shouldn't spend too much time on this
  
  ??: i urge everybody to run lots of good stuff in their computers;
  examine all the mailing lists you're on at the IETF and ask about
  security; we made (in DNSSEC) registrars do it even if everybody
  said "there's no demand"; push your providers
  
  charlie perkins: 1. have been asking ppl what will your privacy be
  in five years? none; a PR problem; why is privacy important? 2. we
  need identity management; mobility management; mobile providers
  track every byte you send for charging you , at least that's the
  cover story
  
  erik klein ?: what can we do aobut economic effects? like from 2001,
  evbdy waiting for RSA patents to expire; most ppl charge more for
  SSL; can the tech community do anything about that?
  
  eliot: "great question", bruce can you comment?
  
  bruce: yes, this is hard. we do have incentive issues. the benefits
  accdrue only when many ppl use this and the eary adooters do pay
  more. we _can_ sunset protocols, i.e. forcing ppl to move.
  
  [iab person, with glasses]: i wanna change the economics too, think
  about the automobile, it changed stuff, we can't go back -- ask the
  ppl in detroit; i wonder if we've introduced a change here
  
  ??: what are the threats to devices, as opposed to laptops and phonees? 
  
  farrell: crypto is availlable; look at ipsec, works in tiny amount of code
  
  bruce: i'm worried about the internet of things; it increases [?],
  think about cell phones, they are trackers, they have better motion
  sensors and stuff; looking at it individually doesn't say much but
  look at the big picture; talking about issues [...]
  
  jari: not too worried about the devices, more worrited about the
  data from the devices; think of gmail - a single database with all
  the data about all of us; think of things being distributed
  
  swemike: failure mode of dnssec is bad, how to we expoose the
  failure modes to the user? if it doesn't work, users is going to
  turn it off; where do wanna be in five years and how does it work
  from a users PoV? usability expoerts here?
  
  [iab person, bearded, far right on stage]: good point, strong challenge
  
  murray, channeling queswtion from home: scope was staggering (snowden); what's the takeaway form al lthis?
  
  bruce: robust system, so many ways to get at our data, simultaneously
  
  stephen: describing the threat model
  
  questioner: were we too narrow up until now?
  
  farrell: lots of things at teh same time, we didnt anticipate that
  
  sam hartman: we are enablers (as technologists) and we do that, from
  ; what to do? 1. clear that any attack is possible and when someone
  says "who's going to do that?" reply "they will!". 2. encryption
  even w/o authn has value -- opportunistic enc is valuable; 3. enable
  things -- we shouldn't decide what market does, same for cloud stuff
  -- enable for decentralized solutions
  
  brian t[?]: respond to bruce: policy is not very ood at looking at
  the big picture; well we're not either. when increasing enc we also increase siloing. how can we decrease the problem of not looking at the big picture?
  
  stephen: lok at tls 1.3 and ekrr's 
  
  [iab person]: if we put too strong enc in some government will not connect to internet
  
  ??: anhy project providing funding for [?]
  
  bruce: i disagree: math is on the dfeenders side; there are tech
  things ou can do; agree, lots of things are political and
  international political
  
  brian carpenter: defuse the political debate by providing the good
  tech increasing security
  
  wes h[?]: private conversation with my wife; send her a text,
  realized i can't send this, "this airport is dead" was the gthing i
  didn't think was a good thing to send; we've been architecting under
  two thoughts: 1. centralizing everything; two things have
  changed 1. with ipv6 we can get to things directly, no care abt NT,
  and we need to ...; 2. we're now online all the time, f.ex. SMTp
  servers were needed bc nothing else was online, but now it isö
  decentralisation
  
  matt må_ knee+jerk reaction is Ämore ecnryptionÄ but we need
  Ämodulated securityÄ. problemÖ providers with strong tls, while ther
  eare laws making f.ex. empoloyers can read email of employeesö
  example where mitms tls at workplaces
  
  stephen: get rid of me before getting tls mitm standardised
  
  eliot: good ideas, mark has a draft
  
  greg [mirsky?]: not only tech, not only national, but international;
  with the internet of things we don't know where data is going to be
  collected; 
  
  jari: infor about where data is stored is imprtant; think hard
  before you use the cloud; IETF should have tools to talk direct and
  distribute data
  
  ??: we depend o f isp and law enforcement; malware or other things,
  we need to keep track, need to handle prlbem, before putting
  encryption we must think abt this
  
  tim [pole?], nist; doing public review of it sstandard process, will
  talk abt that at SAAG tomorrow; an observation: we can do better but
  we have a lot of tools that are not in use today; we security is
  going to cost -- usability, performance; this is only a first step
  
  jari: cost of security and get users to use existing tools is key;
  this is a unique opportunity thanks to the press; grab the
  opprotunity; now is the time
  
  alvestrand: philosphical: the colour black: 1. sadness -- i put on a
  black t-shirt bc i aws a bit sad; 2. what goes on in the darkness
  needs to be hidden -- we make common cause with those who have
  reason to hide; we're seeking to empower those want to hide and
  that's a real cost to society; a a cost we have to take, bu and i
  think is worth it and the action is ; 3. go dark
  
  carpenter: we shouldn't have this discussion
  
  [chair]: i don't want my emoployeeeeeeer to know when i talk to myu doctor
  
  ??: i spoke on internet hardening in 1998; spent the last 15 years
  with scada, aviation things; we don';t give good guidance to build
  good networks; we should help building critical infrastructure; form
  a wG on critical infrastructure networking
  
  dean l[?]: translation: encryption is like birthday cake -- the more
  layers the tastier but the more meesy to eat; companies have to
  operate acdording to law and avoid law suit; unique position to help
  say best practices for networks; companies can leatn on what IETF
  says
  
  benoa: yes, there is a market for [?]
  
  dean: we need to adopt, suspecxtability to pervasive surveillance; 
  
  [jeff?]: never let a good vuln go to waste -- let's use this
  knowledge to get better; we're on te right way; lots of soft
  targetrs out there, like quality of ipmlementations; what can we do
  in protocl specs to make end result of implementaions harder and
  stronger?
  
  bruce: the more idiot-poof the better. PRNG are loiusey, sw choices
  bad, the less optins to give someone who doesn't know security
  
  eliot: stuff should be designed by geniouses, not for geniouses
  
  mark nottingham: we must allow dispersal; we don't have open
  protocols for dropbox-like services; i want that; perfect is the
  enemy of the good, we have to walk the line btw real good security
  and balkanisation; we might not have the luxuary of being perfect
  
  eliot: spectrum btw very few servers and one server each -- there's
  middle ground; look at your group (httpbis)
  
  ??: q for bruce: ethical issue, i can use tor to start a flame war
  on reddit; different protection need by different ppl
  
  bruce: put tor into some server code to make it more deployed? otr
  is great; granulataret less; safety in numbers! 
  
  paul wouters: i see 2 msgs: 1: pl tell me pls do more opprotunistic
  encryption but i'm saying this in private; 2. your'e doing great but
  i won't tell you in public bc i've taking money from nsa before so
  if i comment your draft will be tainted; pls continue to review
  drafts bc we need to handle this anyway
  
  ??, verizon: 802.180, fiber links, blah blah blah
  
  ??: border protection forced me to open my laptop; scanning for
  child porn; asked me for passphrase and took my comp to secret room
  for half an hour; 
  
  bruce: yeah, we know that. i travel with burner phone and burner computer; 
  
  ted: disagrea with brian. he looked forward to a long debate but we
  don'tnee done; and second the level of neutrality: we're under
  attack. harms the value of the network; it harms humanity; old piece
  of ietf lore, that in plenary can committ to something; hum on "is
  the ietf willing to take the technical steps ..."
  
  brian: attacks on privacy by business and not only by government
  
  peter st andre: practical actions: working to ensure hop-by-hop
  encryption; use our survey and discover that you can make it better;
  ietf will hofeully sign my manifesto; otr is to be standardised,
  with wouters; more p2p might be needed; we have a free society which
  depends on that not everything is public -- ppl will self censor
  
- russ
  
  is the ietf willing to respond to the attack of pervasive
  surveillance? hum says yes.
  
  should we consider this threat model when developing standards [?]: yes
  
  consider encryption even outside authn? yes
  
  ietf should strive for end-to-end encryption even when there are
  middle boxes in the path? mixed but more yes
  
  ietf should create secure versions of popular non-secure protocols:
  mostly yes
  
  kolkman: what are the next steps? broad questions here. sense of the
  room is clear. how are we getting things done?
  
  russ: first, perpass bof and iab and iasg has have a hotspot
  discussion wchih will be about this
  
  jari: next step is that we document this in an RFC. there's more
  nuance in such a document than what we express here.
  
  jerry?: we've standarided on certain opportunistic standards that
  have not been impelemnted; how to change that?

** perpass <2013-11-06 Wed>
- dave thaler
  targeted vs pervasive monitoring
  goal: reverse it; make it so that pervasive monitoring is more costly than targeted
  - goal of surveillance is to collect information
  common reasonse given:
    saves lives, comats crime; protect against viruses, spam, hackers;
    protects against information leaks
  - types of information
  data: files, email content, chat logs
  metadata: address, locatino, timestamps, size, keywoards
  keys: secrets needed to decrypt data or metadata, or to impersonate
    (and then mitm)
  - strategies mentioned
  overly get a cooperating entity to hand over data
  covertly subvert a general service, like an email provider
  covertly subvert targets system and collect the information
  - get keys
    obtain directly
    lower entropy and rak
    use existing known weaknesses
  - points of influence
    trusted roots & cert auth (diginotar)
      get a fake cert for compromised root
      diginotar compromised, issued certs 
      flame used older cert issuing sw to issue bad cert to spoof MS
      debugging tools liek fiddler add another trusted root in order to act as mitm 
    software creators & distributors
      RNG in code often unsafe -- dict attacks
      compromised crypto API might leak key bits
      things like tor shift focus to attacking vuln sw, like a browser
      too little review --> backdoors
      coerced into building in backdoors or handing over keys
      [one more thing]
    data repos (prism)
      compelled to hand over info
      lavabit shut down
      other data like airlines, energy companies, financial orgs
      bank transfers across borders -- SWIFT
      emai lmetadata with two degrees of separation could be obtained
      metadata correlation with other records (eg hotel guest list)
    protocol algorithm designer (dual_ec_dbrg)
      influence to use breakable crypto, eg dual_ec_dbrg (nist)
      influence policies, standards and specs
      fear of influence over standards by govs or companies
    network operators (quantum)
      install surveillance at exchange points, links for customers
      attacker hack into router to redirect traffic to mitm
      redirect target to website that plants malware
    pysical fiber, satellite (muscuilar)
      tap links with physical access
      esp w/o encryption on links btw data centers
    hw designers & factories (esp with IoT (internet of things))
      manufacturere could insert aa backdoor into producet
      insert hw torjans at designer or at factory ==> reduce entropy or leak keys
      influence encryption chips used in vpn and web encrytion devices
  summary table
  - questions

    randy: spread their budget
    dave: minimzation of value of your info
    
    peter saint andrew: there are no orgs iwht unlimited resources
    
    dave: pervaiseve vs. targeted
    
    brian smith, mozilla: abt not to take input from certain orgs:
    maybe we could be more insistan on get rational for the feedback

    keith moore: re shift resources from pervaise to targeting monitoring; 
    
    ??: isp's do monitoring and traffic engineering; are we trying to
    prevent operational ppl from doing their jobs
    
    bernard aboa: review crypto algo; question them more
    
    ??: changing crypto algo is not always a good thing
    sean: we do evaluate and we do have real cryptographers
    
    ??, ms: review protocols for privacy trouble
- brian trammell
  the threat
    eavesdropping every packet on every wire
      unencrypted? payload analysis
      encrypted?  metadata analysis
      fingerprinting and association
    compromise of intermediate systems
    compromise of cryptographic protocols (strike -- best evaluated separately)
    compromise of endpoints (strike -- out-of-scope of protocol design)
    compromise beyond the endpoints, like PRISM (strike -- ditto)
- phillip hallam-baker
  four box model
- [httpbis chair] "MORE TLS"
  threat model: passive attacks
  a. opportunistic encryption
    encrypt, don't do authn, don't worry about downgrade, don't tell the user

  1. creating confusion about security
  2. discouraging the full security solution
  3. encouraging active attacks
  4. authn is core part of tls -- don't change it
  
  b. opportunistic encryption with server authn

    protects aginst mitm but sudpectible for downgrade, can be
    mitigated with pinning (maybe)
    
  1. barrier to deployment
  2. perfect is the enemy of the good
  3. might as well do...

  c. tls everywhere
  
    for http: only support http/2.0 for https uris
    combining  with HSTS to mitigate downgrade attacks
  
  1. costly
  2. disempowers intermediaries (proxies)
  3. fragmentation of the internets

  - what should we focus on
    1. threat model
    2. tradeoffs
    3. perceptions fo security

- alissa cooper -- privacy bcp [[file:~/Persistent/u/ietf/internet-drafts/draft-cooper-ietf-privacy-requirements-01.txt][draft-cooper-ietf-prviacy-requirements]]
  rfc 1984, 3365, 2804, [more]
  personal data definition, important
  new standards-track protocols:
  1. MUST minimze their use of personal data
  2. where it's sent, MIUST use crypto
  nr two says we need opportunistic encryption and requirements can be
    waived only in exceptional circumstances

- open mic
  malissa: opportunistic encryptionn means encryption without prior arrangements
  
  keith moore: worry about the last draft (alissa) bc it's easily
  thwarted by active attacks
  
  alissa: we're just setting the floor
  
  lear: that's a provocative document -- please define what you're asking for
  
  dan h: IETF could specify a good strong PRNG
  
  stephen: rfc4086, new ml coming up abt this
  
  steve [?]: is this a common bof? what would a WG do? what' sthe intent
  sean: it's not a WG coming up
  
  rob [?]: etisalat has backdoored balckberry users, 100k of them

  roberto peon, google: 1. lacking specificity; 2. encryption
  everywhere is a good thing, broasder than preventing pervasiva
  attacks, there is surveaillance that that are value-add actually
  
  dave crocker: phb observed that we havent done good on usability; 
  
  moriarty: checkbox compliance is not really useful [i think]
  
  robin w: minimizing personal data is good, however be careful; what
  is personal data? metadata is far more revealing than we thought. 
  
  bernard aboa: re opportinustic encryption: think through what this
  mean for real -- this guideline is too 
  
  ??: crypto and usability; why are ppl not using good protocols using
  crypto? 2nd: look at protocols and see what are ppl doing?
  
  mark townsling: internet consensus 2012: port 80 was nr 1, upnp was
  nr 2; upnpn from four implementations
  
  nick d, berkeley: thanks; useful for procedural reasons maybe;
  privacy reviews, early privacy consideration; require "privacy
  considerations"? this might be the time
  
  john mattsson: be careful about naming "opportunistic encryption"
  
  jim gettys: used to be http; we're rought consensus and running code (!)
  
  chrstian huitema, ms: review of old protocols
  
  ??: we want to force ppl to use authn encryption
  
  jim fenton (jabber)
  
  william allan simpson: +1 keith moore; can also interfer with tcp
  extensions, ipv6 actually had opportunistic encryption but it was
  shot down by the IETF
  
  ??: ipv6, BTNS (better than not security)
  
  sam: favour opportunistic encryption bc i DO WANT to have targeted
  attacks and mitm instead of the current state of affairs
  
  tim c: zeroconf at the cost of security does happen  
  
  phb: give me metrics so that i can measure if i'm doing good or if
  i'm just pushing the baloon down at one place and it pops up at
  another; omnibroker
  
  wes, sparta: maybe write a section in protocol specs explaining how
  a user can use this protocol in a secure manner
  
  kieth moore: concrete things: 1. help ppl get real certs and get
  them into [their browser?]; 2. make ppl sign their zones; 3. can not
  trust your resolver (for DNSSEC validation)
  
  colin jennings: opportunistic encryption: it's not that expensive to
  mitm
  
  ralph: we can't secure DHCP -- move all that config crap into
  something that can be secured
  
  james woodyatt: RFC6092 CPE security
  
- next steps
  
  general bcps
  - threat model
    start from draft-trammell-perpass
    use pperpass list
    clarify scope
    informationel rfc
    ietf lc after ietf89
  - privacy bcp
    start from draft-cooper-ietf-privacy-requirements
    use ietf-privacy list
    opportunistic encryption ediscussion capture here
    ietf lc after ietf89
  - tls general bcp
    in tls wg
  - ietf policy & procedure changes

  work on protocl specifics
  - specific uses of tls
    multiple bcps
  - other cyrpto
    tcpcrypt
    opportunistic IPSEC
  - more-than-MTI
  - privacy: specific per-protocol and system issues

3. group future
   - irtf rg?
     research -- not a dumping ground
   - perpass
     another session in ietf89? yes

** open hardware crypto
About 25 people in the room.
- use cases
  tor dir auth medium term keys
  end user key gen & storage
  infrastructure roots
  key replication & backup
  SAMl federations / XML sig (keygen & storage)
  gatekeeper
  "client certs"
** saag <2013-11-07 Thu>  
- polk, nist
  published DES 1977 (FIPS 46), in an open fashion (for its time)
  stakeholders
  goals, objecdtives, role
  nist process
  - recent events
    WIRED article, more
    iab says "you need more openness"
  process update
  how can ietf contribute?
  - q&a
    adoption of ecc has been difficult enough

    dan harkins: catch22 when nist won't do a thing bc nobody ... in
    jose, it was suggested to use gcm as a determenistic key wrapper
    
    dan frost: thanks; relying on the good faith of the us gov, why
    should we continue with nist regardless of the change of your
    process? need an independent organisation; 
    
    answer: the particular paper has two rngs hash based, one block
    based, one ecc based; the national security community wanted the
    ecc one; we put in the spec that ppl should generate their own
    points, but there were already hw being built using the specified,
    with unknown roots, points. we had a process, it just wasn't
    followed enough.
    
    nn: that explanatoin you just gave proves to me that this is not
    only a process problem but also a lack of expertise; need more
    
    answer: we plan to expand the team; it can be done better
    
    russ housley: here are the ways your process can be made better;
    
    via jabber: ben ??: stream ciphers?
    
    answer: it's a significant void in our catalog
    
    brian smith, mozilla: some browsers will be using ecc and other
    new ciphers, not reviewed by nist; can you reviewe them _after_
    and in a speedy fashion
    
    answer: "in ecc, less is more"; fips201 (smart card) six algo;
    later we did recommend only two points
- lisp and security
  - problem statement
    protect lisp data plane; confidentiality, can we have integrity too?
    can we get done w/o a PKI
    key exchange
  - lisp 
    eid's are end-user addresses; 
  sam says he's willing to help
  we want to put key material in the lisp maping db
  LCAF encodes key-type, cipher-type and key material
  - open mic
- paul wouters -- opportunistic encryption -- we're getting the
                  cypherpunks band back together
  draft-wouters-
  - old frees/wan
    not motivation enough
    not many crsypto libraries
    insisted on mutual authn
    thought NAT was going away (ipv6)
    30-45 seconds to bootstrap a frees/wan server
  - what's changed
    we know we're monitered
    dnssec
    devices powerful
  - what's not changed
    users still not able to configure ipseckey in dns
    still nat
    reverse dns still unusable
  - opportunistic encryption with ipsec
    intercept at the dns server (resolver?) instead
  - anonymous oe with ipsec
    app sends dns req for a rec to local dnssec reoslver
    dns finds a recor d and
    [more]
  - compare with BTNS
  - q&a
    paul: tls makes me nervous bc all apps shouldn't have to add that
    
    nn: what layer is the right layer to do opp enc?
    
    paul: there are some drafts
    
    nn1: ?
    
    paul: it's easy to add 10 different authn methods but it makes it
    harder to f.ex. get back to the user and explain what the status
    of security is
    
- open mic
  sam: whan a mistake is made, what [?]. 
  sam: what is our process for interacting with nist?
  sam: do like ITU and ISO and say to others: come here and explain!
  
  sam: we shouldn't take stuff from nist without thinking.
  tim polk: nist 863 is the best doc for authn, bc it's the only one!
  it's not science, it's not math, it's [horrible].
  
  rfc4322 opportunistic enc
** abfab <2013-11-08 Fri>
- jim schaad presenting something
- sam on AAA SAML [[file:~/Persistent/u/ietf/internet-drafts/draft-ietf-abfab-aaa-saml-07.txt][draft-ietf-abfab-aaa-saml]]
  anybody read [[file:~/Persistent/u/ietf/internet-drafts/draft-ietf-abfab-aaa-saml-08.txt][-08]]? came out today *giggle*
  "while I had the document open I took a first crack at privacy and
  security considerations."
  look at section 5 (SAML RADIUS Binding), specifically
  open issue: ForceAuthn; requires interactions btw SAML and EAP state
    machine; is MUST appropriate?
  open issue: naming
    leif: scope is two things: a standard component [in SAML?] and a
      shiboleth extension
    sam: "5.3.2.  SAML names" says things we can't do
  open issue: which radius message
  next steps
  leif: aiming for last call at the next ietf
  bill atwood, linus and NN0 will be doing non-expert review
- ui considerations [[file:~/Persistent/u/ietf/internet-drafts/draft-smith-abfab-usability-ui-considerations-04.txt::w][draft]]
  only two reviews (ken and jim); how should we continue?
  rhys: pretty good reviews; ready for wg adoption
  a hum indicates yes
  rhys is free to resubmit
** <friday sessions>
** report
- tech plenary wed morning was packed and the very clear consensus,
  after bruce schneier had mad a good talk [link], was that yes, the
  ietf should respond to the attack of pervasive surveillance and
  consider this threat model when developing standards.

- one question risen in every security related meeting was "should we
  do opportunistic encryption", i.e. encrypt even without proper
  authentication.
* Tor
** standardizing onion routing
See [[*standardizing%20onion%20routing][standardizing onion routing]] for Nick's view.
*** email thread
**** nick 1
To my mind, one big benefit to one or more Informational RFCs
describing Tor would be the rigor of a better-written set of
documents.  Our current specs, though readable, are far from perfect.
I'd hope that better specifications would make it even easier for
others to analyze, update, and improve our protocols.

People already make compatible implementations of the Tor protocols
from time to time. These compatible implementations tend to become
unmaintained fairly quickly--I don't know why that is, but I wouldn't
suspect that our specs are to blame.

I'm a little torn on the benefits of having others build new projects
based on our current protocols.  Our current protocols are, to be
blunt, more or less the sort of thing you'd expect if some talented
but young developers had designed something in a hurry ten years ago
and kept patching it over the years to improve and refine it.  There
are aspects of the protocols that serve no useful purpose besides
backwards compatibility.

What  other benefits would we hope for or expect?


I'm not personally interested in the idea of moving the institutional
responsibility for developing future versions of the Tor protocols in
the future from the IETF. Naturally, we can't stop people from forking
the Tor protocols -- and we wouldn't want to have such authority if it
existed -- but I think the benevolent-dictatorship model serves us
(for now at least) better than the working-group model would.  If I
understand correctly, this means we ought to aim for an Informational
RFC?


The biggest risk would be that someone in the future attempting to
implement Tor-compatible software would aim for compatibility with Tor
as described in the RFC, rather than Tor as implemented on the Tor
network. What could we do to mitigate this risk?


So, how volatile are the Tor protocols exactly?  We keep them
specified version-to-version, and they change a bit in every release
series.  Looking down the list of protocols, there are roughly no
parts that I would be willing to promise never to change in the
future.  In practice, we generally have found it to be no real burden
to support versions of the protocol up to two or three years old, but
we have found it desirable to break backwards compatibility with
things much older than that from time to time.

[Now, to write that other email.]
**** nick 2, replying to stephen
I think that a phone call would be a fine idea.  Or possibly an online
chat, if you're comfortable with that: I find that I am a little
better at communicating nuance in text than in speech.  (To be clear
though, phone would work too.)

Is the logical thing just for a quick two-person chat to get me to
understand what the options are, or should we try to schedule a
multiperson thing?
** cryptohw use case for DA keys
- https://trac.torproject.org/projects/tor/wiki/doc/TorRelaySecurity
  Key theft from ordinary relays.
- https://trac.torproject.org/projects/tor/ticket/5992
  Replace individual directory authorities with a safe alternative
- https://trac.torproject.org/projects/tor/ticket/5968
  "Improve onion key and TLS management"
  README
- https://trac.torproject.org/projects/tor/ticket/5563  
  "Better support for ephemeral relay identity keys"
  README
** TLS
See [[*talking%20to%20nick][talking to nick <2013-11-01 Fri>]] for background.

Related: [[file:~/Persistent/u/ietf/in-notes/rfc5246.txt][RFC5246 (TLS 1.2)]], [[file:~/Persistent/u/ietf/in-notes/rfc5116.txt][RFC5116 (AEAD)]]

Here are the action points.

- encrypt-then-MAC as an AEAD mode
  https://en.wikipedia.org/wiki/Authenticated_encryption
  http://www.daemonology.net/blog/2009-06-24-encrypt-then-mac.html
  http://crypto.stackexchange.com/questions/202/should-we-mac-then-encrypt-or-encrypt-then-mac
  [[file:~/Persistent/u/ietf/internet-drafts/draft-gutmann-tls-encrypt-then-mac-04.txt::TLS%20Working%20Group%20P.%20Gutmann][draft-gutmann-tls-encrypt-then-mac-04]]
- encrypt as much of the handshake as possible, encrypt record types
- encrypt record boundaries
- minimize necessary observable differences between TLS implementations
- make gmt_unix_time go away (or problematic or deprecated or something)
- [goes in a standard?] No new ciphers or suites should get added
  unless the proponent can point to constant-time implementations of
  those things on several platforms.
- [needs no action] Support the ciphers we like (agl likes them too
  and pushes them already)

*** encrypt-then-MAC (EtM) as an AEAD mode
What is AEAD? It's "authenticated encryption with additional
data". Examples in TLS are CCM and GCM.

[i think that] A message encrypted with AEAD can be verified to have
been encrypted with a given key. That's the authentication.

How does it relate to encrypt-then-MAC?
A: AEAD could do EtM.

https://en.wikipedia.org/wiki/Authenticated_encryption:
  Six different authenticated encryption modes (namely OCB 2.0, Key
  Wrap, CCM, EAX, Encrypt-then-MAC (EtM), and GCM) have been
  standardized in ISO/IEC 19772:2009.

RFC5116:
   It may be desirable to define an AEAD algorithm that uses the generic
   composition with the encrypt-then-MAC method [BN00], combining a
   common encryption algorithm, such as CBC [MODES], with a common
   message authentication code, such as HMAC-SHA1 [RFC2104] or AES CMAC
   [CMAC].  An AEAD algorithm of this sort would reflect the best
   current practice, and might be more easily supported by crypto
   modules that lack support for other AEAD algorithms.

Related:
- http://www.daemonology.net/blog/2009-06-24-encrypt-then-mac.html
- http://crypto.stackexchange.com/questions/202/should-we-mac-then-encrypt-or-encrypt-then-mac

TODO: read, input from Sam, who also asks "why would you want AEAD?"

[[file:~/Persistent/u/ietf/in-notes/rfc5246.txt][RFC5246]]:

   In AEAD encryption, the plaintext is simultaneously encrypted and
   integrity protected.  The input may be of any length, and aead-
   ciphered output is generally larger than the input in order to
   accommodate the integrity check value.

[[file:~/Persistent/u/ietf/internet-drafts/draft-gutmann-tls-encrypt-then-mac-03.txt][Gutmann's draft]]:

3.  Applying Encrypt-then-MAC
[...]
   Note from the GenericStreamCipher/GenericBlockCipher annotation that
   this only applies to standard stream and block ciphers that have
   distinct encrypt and MAC operations.  It does not apply to
   GenericAEADCiphers that already include integrity protection with the
   cipher.  If a server receives an encrypt-then-MAC request extension
   from a client and then selects an AEAD cipher suite, it MUST NOT send
   an encrypt-then-MAC response extension back to the client.
**** nick, email
On Mon, Nov 4, 2013 at 10:40 PM, Linus Nordberg <linus@nordberg.se> wrote:
> Hi Nick,
>
> I'm trying to understand why we want EtM as an AEAD mode.
>
> Why AEAD? What does AEAD give us that we wouldn't get from EtM with
> "ordinary" ciphers, i.e. what draft-gutmann-tls-encrypt-then-mac
> suggests?
>
> I'm not very good at this but I'd like to try to understand.

I'm fine with either alternative. What I'd really like to do is
obsolete the existing mac-pad-encrypt construction, and I don' t much
care how.

Rationale: Someday, maybe in a decade or so, TLS 1.2 and earlier will
be dead; it will no longer be necessary for most users to turn them
on, or for most software to implement them. When these versions are
finally gone, it would be great if their mistakes were gone too.  But
unless we either deprecate all existing CBC and stream ciphersuites,
or specify encrypt-then-mac for TLS 1.3, we'll be stuck with the
current nonsense for even longer.

So it seems to me.

--
Nick
* Reviews
** http://huitema.net/papers/draft-huitema-perpass-analthreat-00.txt
*** review
1st done, sent to huitema
*** text
Network Working Group                                         C. Huitema
Internet-Draft                                     Microsoft Corporation
Intended status: Informational                          October 28, 2013
Expires: May 01, 2014


              Passive Traffic Analysis Threats and Defense
                draft-huitema-perpass-analthreat-00.txt

Abstract

   Traffic analysis is used by various entities to derive "meta data"
   about Internet communications, such as who communicates with whom or
   what, and when.  We analyze how meta-data can be extracted by
   monitoring IP headers, DNS traffic, and clear-text headers of
   commonly used protocols.  We then propose a series of actions that
   would make traffic analysis more difficult.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on May 01, 2014.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.












Huitema                   Expires May 01, 2014                  [Page 1]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
   2.  Passive Analysis Targets  . . . . . . . . . . . . . . . . . .   3
   3.  Analysis of IP headers  . . . . . . . . . . . . . . . . . . .   4
   4.  Linking IP addresses to user identities . . . . . . . . . . .   5
     4.1.  Monitoring POP3, IMAP or SIP clients for identifying
           users of IP addresses . . . . . . . . . . . . . . . . . .   5
     4.2.  Retrieving IP addresses from mail headers . . . . . . . .   6
     4.3.  Tracking address use with web cookies . . . . . . . . . .   7
     4.4.  Tracking address use with network graphs  . . . . . . . .   7
     4.5.  Stuff we have not thought off yet . . . . . . . . . . . .   7
   5.  Defenses against IP header monitoring . . . . . . . . . . . .   8
     5.1.  Client server encryption  . . . . . . . . . . . . . . . .   8
     5.2.  Clean-up E-mail headers . . . . . . . . . . . . . . . . .   8
     5.3.  Source address obfuscation  . . . . . . . . . . . . . . .   9
     5.4.  Network address translation . . . . . . . . . . . . . . .   9
     5.5.  IPv6 privacy addresses  . . . . . . . . . . . . . . . . .   9
     5.6.  Frequent address renumbering  . . . . . . . . . . . . . .  10
     5.7.  Multihoming . . . . . . . . . . . . . . . . . . . . . . .  10
     5.8.  Virtual Private Networks  . . . . . . . . . . . . . . . .  10
     5.9.  Web proxies . . . . . . . . . . . . . . . . . . . . . . .  10
     5.10. Onion routing and shuffle nets  . . . . . . . . . . . . .  11
     5.11. And there is more . . . . . . . . . . . . . . . . . . . .  11
   6.  Recommendations . . . . . . . . . . . . . . . . . . . . . . .  11
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .  11
   8.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  11
   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  11
   10. References  . . . . . . . . . . . . . . . . . . . . . . . . .  11
     10.1.  Normative References . . . . . . . . . . . . . . . . . .  11
     10.2.  Informative References . . . . . . . . . . . . . . . . .  12
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  12









Huitema                   Expires May 01, 2014                  [Page 2]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


1.  Introduction

   The massive monitoring attacks that we know about seem to fall into
   three categories: listening to the content of communications in
   transit, accessing content of documents and past exchanges at a
   server, and analyzing traffic to find patterns of communications and
   deduce social exchanges.

   Other efforts address the "listening on conversations" attack, and
   how to prevent them with more or better encryption.  There are some
   good ideas for reducing the risk of accessing contents on server,
   such as storing encrypted contents on servers, or enabling
   distributed services so that users can chose server locations that
   they find more acceptable.  Enabling encryption will also reduce the
   capability to extract information from the e-mail or http headers.
   This draft focuses on a different set of threats, the monitoring and
   analysis of Internet Protocol headers to extract "metadata" such as
   the structure of social graphs or the timing of social events.

   This draft proceeds by analyzing first the information that the
   monitoring entities desire to acquire and that privacy advocates
   would like to protect.  These monitoring tools are expected to work
   for both IPv4 [RFC0791] and IPv6 [RFC2460].  We present then the
   mechanism of IP header monitoring, and discuss the critical problem
   of associating IP addresses to user identities.  We then review a
   series of mechanisms that might be used to mitigate IP header
   monitoring.

2.  Passive Analysis Targets

   Questioned about revelation that his secret services were monitoring
   all the phone calls of the populace, a famous leader defended himself
   by saying that no, we don't listen to your phone calls, we merely
   gather "meta data."  It turns out that meta data such as who called
   what telephone number and at what time is actually very valuable.

   The first target of traffic analysis is the graph of connectivity
   within a given population.  If we known that two phone numbers
   frequently call each other, we can infer that there is a relation
   between the owners of these numbers.  For example, if investigative
   services discover a pattern of calls between an old general and some
   young lady, they can infer the existence of some inappropriate
   relation, and eventually force the general to relinquish his
   leadership position.  Similarly, if we find a pattern of frequent
   calls between a small set of telephone numbers, we can infer the
   existence of some tight-knit network.  Further analysis can then lead
   to the evaluation that these are just the members of the same family
   or the same sports team, or on the contrary it can find that these



Huitema                   Expires May 01, 2014                  [Page 3]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   are political opponents organizing themselves, or maybe in rare cases
   some members of an underground criminal organization.

   The second target of traffic analysis is the discovery of traffic
   surges.  If the monitoring of traffic reveals increased activity
   between a particular group, secondary analysis can be used to obtain
   more information on the activities of the group.  That secondary
   analysis will be able to find the difference between a family
   preparing a birthday event, a sports team training for a particular
   competition, a group of activists planning a political protest, and
   maybe in rare cases a group of criminals planning some nefarious act.

   Traffic can operate across multiple media.  Analysis of phone calls
   reveals patterns between phone numbers, but similar analysis can be
   applied to IP addresses.  Traffic analysis becomes much more valuable
   if the IP address can be associated with a personal email address or
   with a personal phone number.  This correlation is also a target of
   traffic analysis.

   For the defenders, the targets of traffic analysis become as many
   assets to be protected.  In the following analysis, we will focus on
   ways to thwart discovery of the graph of connectivity, timing of
   activity, and correlation between identifiers.

3.  Analysis of IP headers

   Internet traffic can be monitored by tapping Internet links, or by
   installing monitoring tools in Internet routers.  Of course, a single
   link or a single router only provides access to a fraction of the
   global Internet traffic.  However, monitoring a number of high
   capacity links or monitoring a set of routers placed at strategic
   locations provides access to a good sampling of Internet traffic.

   Tools like Cisco's NetFlow [RFC3954] allow administrators to acquire
   statistics about "sequence of packets with some common properties
   that pass through a network device."  The most common set of
   properties is the "five tuple" of source and destination addresses,
   protocol type, and source and destination ports.  These statistics
   are commonly used for network engineering, but could certainly be
   used for other purposes.

   Let's assume for a moment that IP addresses can be correlated to
   specific services or specific users.  Analysis of the sequences of
   packets will quickly reveal which users use what services, and also
   which users engage in peer-to-peer connection with other users.
   Analysis of traffic variations over time can be used to detect
   increased activity by particular users, or in the case of peer-to-
   peer connections increased activity within groups of users.



Huitema                   Expires May 01, 2014                  [Page 4]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


4.  Linking IP addresses to user identities

   In Section 3, we have assumed that IP addresses can be
   correlated with specific user identities.  This can be done in
   various ways.

   Tools like reverse DNS lookup can be used to retrieve the DNS names
   of servers.  In fact, since the addresses of servers tend to be quite
   stable and since servers are relatively less numerous than users, we
   can expect that large scale monitoring services maintain databases of
   servers' IP addresses to facilitate such retrieval.  On the other
   hand, the reverse lookup of users addresses is less informative.  For
   example, a lookup of the address currently used by my home network
   returns a name of the form "c-xxx-xxx-xxx-xxx.hsd1.wa.comcast.net" in
   which the symbols "xxx-xxx-xxx-xxx" correspond to the IP address used
   by my home network.  This particular type of reverse DNS lookup does
   not reveal much interesting information.

   Traditionally, the police has relied on Internet Service Providers
   (ISP) to provide identification on a case by case basis of the
   "owner" of a specific IP address.  This is a reasonably expedient
   process for police investigations, but large scale monitoring
   requires something more efficient.  If the monitoring service can
   secure the cooperation of the ISP, they may obtain the link between
   identity and address through some automated update process.  We may
   expect that some ISP will not willingly cooperate with large scale
   monitoring of their customers, in which case the monitoring entities
   have to rely on other methods.

   Even if the ISP does not cooperate, identity can often be obtained by
   analyzing the traffic.  We will discuss in the next section how SMTP
   and HTTP can leak information that links the IP address to the
   identity of the user.

4.1.  Monitoring POP3, IMAP or SIP clients for identifying users of IP
      addresses

   POP3 [RFC1939] and IMAP [RFC3501] are used to retrieve mail from mail
   servers, while a variant of SMTP [RFC5321] is used to submit messages
   through mail servers.  The IMAP connections originate from the
   client, and typically start with an authentication exchange in which
   the client proves its identity by answering a password challenge.

   If the protocol is executed in clear text, monitoring services can
   "tap" the links to the mail server, retrieve the user name provided
   by the client, and associate it with the IP address used to establish
   the connection.




Huitema                   Expires May 01, 2014                  [Page 5]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   The same attack can be executed against the SIP protocol, [RFC3261]
   if the connection between the SIP UA and the SIP server operates in
   clear text.

   There are many instant messaging services operating over the Internet
   using proprietary protocols.  If any of these proprietary protocols
   includes clear-text transmission of the user identity, it can be
   tapped to provide an association between the user identity and the IP
   address.

4.2.  Retrieving IP addresses from mail headers

   The SMTP protocol specification [RFC5321] requires that each
   successive SMTP relay adds a "Received" header to the mail headers.
   The purpose of these headers is to enable audit of mail transmission,
   and perhaps to distinguish between regular mail and spam.  Here is an
   extract from the headers of a message recently received from the
   "perpass" mailing list:

   Received: from xxx-xxx-xxx-xxx.zone13.example.org (HELO ?192.168.1.100?)
    (xxx.xxx.xxx.xxx)
    by lvpsyyy-yyy-yyy-yyy.example.net with ESMTPSA
    (DHE-RSA-AES256-SHA encrypted, authenticated);
    27 Oct 2013 21:47:14 +0100
   Message-ID: <526D7BD2.7070908@example.org>
   Date: Sun, 27 Oct 2013 20:47:14 +0000
   From: Some One <some.one@example.org>


   This is the first "Received" header attached to the message by the
   first SMTP relay.  For privacy reason, the field values have been
   anonymized.  We learn here that the message was submitted by "Some
   One" on October 27, from a host behind a NAT (192.168.1.100) that
   used the IP address "xxx.xxx.xxx.xxx."  The information remained in
   the message, and is accessible by all recipients of the "perpass"
   mailing list, or indeed by any monitoring service that sees at least
   one copy of the message.

   For monitoring services, such information is just plain candy.
   Monitor enough e-mail traffic and you can regularly update the
   mapping between IP addresses and individuals.  Even if the SMTP
   traffic was encrypted, the monitoring service could still register to
   receive a copy of public mailing lists like "perpass," and then log
   the header fields.

   Similar information is available in the SIP headers [RFC3261].





Huitema                   Expires May 01, 2014                  [Page 6]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


4.3.  Tracking address use with web cookies

   Many web sites only encrypt a small fraction of their transactions.
   A popular pattern was to use HTTPS for the login information, and
   then use a "cookie" to associate following clear-text transactions
   with the user's identity.  Cookies are also used by various
   advertisement services to quickly identify the users and serve them
   with "personalized" advertisements.  Such cookies are particularly
   useful if the advertisement services wants to keep tracking the user
   across multiple sessions that may use different IP addresses.

   As cookies are sent in clear text, a monitoring service can build a
   database that associates cookies to IP addresses.  If the IP address
   is already identified, the cookie can be linked to the user identify.
   After that, if the same cookie appears on a new IP address, the new
   IP address can be immediately associated with the pre-determined
   identity.

4.4.  Tracking address use with network graphs

   There have been many publicly reported instances in which the police
   managed to find the owner of a "disposable" cell phone.  In theory
   this is hard, because there is no direct registration of the owner's
   identity.  But in practice, the identity can be inferred through
   analysis of network graphs.

   Suppose that the new owner of the cell phone uses it carelessly to
   call his mother, his brother, his boss and his preferred restaurant.
   Mother, brother, boss and restaurant are part of the "network graph"
   already collected by pervasive monitoring, and in fact constitute an
   almost unique signature of this particular individual.  A quick
   database search and voila, the cell phone is identified.

   The same approach can be applied to IP addresses.  Users do a lot of
   repeat visits to web sites, mail servers, game servers, instant
   messaging servers, etc.  These visits tend to follow time patterns.
   It is easy to imagine that if a particular pattern was seen from
   address "A" one day, and the same pattern from address "B" the next
   day, then A and B point to the same user, whose computer just got a
   new address.  At that point, the user may be identified only as a
   "case number," but the real identity can be filled as soon as email
   monitoring is successful, or sip monitoring, or maybe some ISP
   cooperation.

4.5.  Stuff we have not thought off yet

   The previous sections listed a number of known ways to extract
   identities from IP addresses.  This is by no means an exhaustive



Huitema                   Expires May 01, 2014                  [Page 7]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   list.  There are certainly other possibilities, for example
   monitoring of public Wi-Fi networks and tracking of association
   between MAC addresses and IP addresses, or monitoring of various
   authentication services.

5.  Defenses against IP header monitoring

   In the current state of the Internet, defense against monitoring is
   very hard.  There are many ways to associate IP addresses with user
   identity.  Tapping of big Internet pipes is bound to provide a trove
   of data.  Retrieving social graphs and detecting surges of activity
   is well within the means of a well funded monitoring service.  But
   this does not mean that the Internet engineering community should
   just give up.  Even if we cannot stop this monitoring completely, we
   can certainly make it harder and less reliable.

   The first version of this internet draft presents a list of potential
   defenses that have been mentioned in various discussions.  This list
   is not exhaustive, and is also not prioritized.  It is merely a
   recollection of a number of suggestions.

5.1.  Client server encryption

   The previous analysis shows that IP traffic analysis is facilitated
   by the discovery of relations between IP addresses and users.
   Encryption of the client-server protocols will deprive monitoring of
   this source of information.

   The analysis was conducted for mail protocols (POP3, IMAP, SMTP) and
   for SIP.  Encrypting these protocols is of course a priority.  But if
   we want to really mitigate the threat of disclosing identity to
   address mappings, we should encrypt any protocol that carries a
   description of the user identity.

5.2.  Clean-up E-mail headers

   The initial "Received" field of e-mail headers carries the IP address
   from which the e-mail was submitted.  This is equivalent to
   broadcasting the mapping between that IP address and the user
   identity.  We should seriously consider the tradeoff between privacy
   and auditability that this feature afford.

   A reasonable tradeoff could be to not publish the IP address or the
   domain name of the initial submitter, and to start the "Received"
   list with the IP address of the mail server.  We should however
   consider the case where the first server is a "home" server, whose
   public IP address is the same as that of the user.  Ideally, we
   should not publish that either.



Huitema                   Expires May 01, 2014                  [Page 8]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   The same reasoning should apply to any protocol that publishes a
   trace of successive server addresses in its headers.  At some point,
   auditability should give way to privacy.

5.3.  Source address obfuscation

   Jon Crowcroft suggested a nice idea a few years ago, although for a
   different reason: sourceless network architecture [SNA].  Send
   packets with no source address, and you make the metadata much less
   useful.  (Of course, if the packet is to get a reply, the source
   address needs to be encrypted in the payload.)

   The idea is largely theoretical, and would require significant
   changes in a number of widely deployed protocols, including TCP.

5.4.  Network address translation

   Many home networks use "network address translation" (NAT) [RFC3022]
   to share a single IPv4 address between several computers, and
   possibly several users.  NAT are also used in some enterprise
   networks and in some Wi-Fi "hot spots."  Some ISP's have also begun to use
   NAT, providing "private" addresses to their subscribers.

   NAT complicates the task of IP header monitoring, because a
   particular address may be shared between multiple users.  If the
   address is only shared between few users, like the members of a
   family sharing a home network, monitoring services can probably use
   analysis techniques to retrieve the individual connections, and NAT
   may not be more than a speed bump.  If the sharing pool is much
   larger, like all the subscribers to a medium size ISP, monitoring
   becomes significantly harder.

5.5.  IPv6 privacy addresses

   It is ironic to notice that as IPv6 improves "address transparency"
   by removing the need for address translation, it also makes
   monitoring significantly easier than when using NAT.  But the Privacy
   Extensions for Stateless Address Autoconfiguration in IPv6 [RFC4941]
   allow users to configure temporary IPv6 addresses out of a global
   prefix.  Privacy addresses are meant to be used for a short time,
   typically no more than a day, and are specifically designed to render
   monitoring based on IPv6 addresses harder.

   Privacy extensions only affect the least significant 64 bits of the
   IPv6 address.  The most significant 64 bits remain unaffected.  The
   64 bit prefix is typically allocated to a small network, e.g., a
   single household or a Wi-Fi hot spot.  It has pretty much the same
   identifying power as an IPv4 address.  If the network is small in



Huitema                   Expires May 01, 2014                  [Page 9]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   size, the use of privacy addresses, just like the use of NAT, will be
   a mere speed bump for IP header monitoring.

5.6.  Frequent address renumbering

   In the days of modem networking, a computer would receive a new IPv4
   address each time it connected to the Internet.  Always on broadband
   connections may or may not provide the subscribers with permanent
   stable addresses.  Some users pay extra for the convenience of a
   stable address.  Of course, stable addresses greatly facilitate IP
   header monitoring.

   In contrast, we could imagine that the broadband modem is re-
   provisioned at regular interval with a new IPv4 address, or with a new
   IPv6 address prefix.  Some convenience will be lost, and TCP
   connections active before the renumbering will have to be
   reestablished.  However, the renumbering will significantly
   complicate the task of IP header monitoring.

5.7.  Multihoming

   Multihoming is the practice of using multiple connections
   simultaneously.  If done well, multihoming will split the graph of
   connectivity in interesting ways.  Packets will travel over different
   routes, IP addresses will be different.  Multihoming could make IP
   header monitoring harder.

5.8.  Virtual Private Networks

   Virtual private networks (VPN) allow users to set up a "tunnel"
   across the Internet to a "virtual" connection point, and effectively
   provide a form of multihoming.  Since the connections are virtual,
   VPN could also provide a form of frequent address renumbering.  As
   such, VPN can provide some resistance against IP address monitoring.

   VPN's require careful configuration and setup to prevent leakage of
   identifying information.  Tech that purports to secure or privatize
   your communication but that actually leaks - or worse, can be coerced
   into revealing your traffic, is worse than no tech at all.

5.9.  Web proxies

   Sending HTTP requests through web proxy is a way to hide the actual
   IP source of the request, and as such a way to complicate monitoring.







Huitema                   Expires May 01, 2014                 [Page 10]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   Much like VPN, web proxies are a two edged sword.  If the proxy is
   compromised, the true origin of the traffic can be retrieved.
   Moreover, the proxy could become an observation point to monitor the
   web traffic.

5.10.  Onion routing and shuffle nets

   Services like Tor provide an obvious form of resistance against IP
   header monitoring.

5.11.  And there is more

   There are certainly more potential defenses, which will emerge during
   the discussion of this draft.

6.  Recommendations

   The following recommendations are an attempt to summarize the threat
   and mitigation analysis in the previous sections:

   o  Use encryption.  In particular, never send a user identity in
      clear text.

   o  Ask "submission" SMTP server to obfuscate the IP address of the
      user, and not place it in mail headers.

   o  Not completely written yet...

7.  Security Considerations

   This draft does not introduce new protocols.  It does present a
   series of attacks on existing protocols, and proposes an assorted set
   of mitigations.

8.  IANA Considerations

   This draft does not require any IANA action.

9.  Acknowledgments

   The inspiration for this draft came from discussions in the Perpass
   mailing list.  Some of the text was contributed in messages to the
   list by Dave Nix, Brian Trammel and Brian Carpenter.

10.  References

10.1.  Normative References




Huitema                   Expires May 01, 2014                 [Page 11]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   [RFC2026]  Bradner, S., "The Internet Standards Process -- Revision
              3", BCP 9, RFC 2026, October 1996.

10.2.  Informative References

   [RFC0791]  Postel, J., "Internet Protocol", STD 5, RFC 791, September
              1981.

   [RFC1939]  Myers, J. and M. Rose, "Post Office Protocol - Version 3",
              STD 53, RFC 1939, May 1996.

   [RFC2460]  Deering, S. and R. Hinden, "Internet Protocol, Version 6
              (IPv6) Specification", RFC 2460, December 1998.

   [RFC3022]  Srisuresh, P. and K. Egevang, "Traditional IP Network
              Address Translator (Traditional NAT)", RFC 3022, January
              2001.

   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,
              A., Peterson, J., Sparks, R., Handley, M., and E.
              Schooler, "SIP: Session Initiation Protocol", RFC 3261,
              June 2002.

   [RFC3501]  Crispin, M., "INTERNET MESSAGE ACCESS PROTOCOL - VERSION
              4rev1", RFC 3501, March 2003.

   [RFC3954]  Claise, B., "Cisco Systems NetFlow Services Export Version
              9", RFC 3954, October 2004.

   [RFC4941]  Narten, T., Draves, R., and S. Krishnan, "Privacy
              Extensions for Stateless Address Autoconfiguration in
              IPv6", RFC 4941, September 2007.

   [RFC5321]  Klensin, J., "Simple Mail Transfer Protocol", RFC 5321,
              October 2008.

   [SNA]      Crowcroft, J. and M. Bagnulo, "SNA: Sourceless Network
              Architecture", June 2008,
              <https://www.cl.cam.ac.uk/~jac22/talks/sna.ppt>.

Author's Address










Huitema                   Expires May 01, 2014                 [Page 12]

Internet-DraftPassive Traffic Analysis Threats and Defense  October 2013


   Christian Huitema
   Microsoft Corporation
   One Microsoft Way
   Redmond, WA  98052-6399
   U.S.A.

   Email: huitema@huitema.net












































Huitema                   Expires May 01, 2014                 [Page 13]
** [[file:/u/ietf/internet-drafts/draft-trammell-perpass-ppa-00.txt]]
*** review
**** speling, take 1
Typos and speling diff attached. Please disregard line numbers.

http://datatracker.ietf.org/drafts/current/ should be https://.

Any idea how we can get http://trustee.ietf.org/license-info over https?

***** diff
@@ -831,7 +832,7 @@ Table of Contents
    priori that communications systems should aim to provide appropriate
    privacy guarantees to their users, and that such pervasive
    surveillance is therefore a bad thing.  Therefore, susceptibility to
-   pervasive surveillance should avoided as a design goal in protocol
+   pervasive surveillance should be avoided as a design goal in protocol
 
 
 
@@ -919,7 +920,7 @@ Internet-Draft          Perfect Passive
    individual at the other endpoint: the compromise is then truly out of
    the scope of the communication enabled by the protocol.
 
-   We further assume the PPA does not have priviliged information
+   We further assume the PPA does not have privileged information
    allowing the reversal of encryption, e.g. compromised key material or
    knowledge of weaknesses in the design or implementation of
    cryptographic algorithms at the initiator, recipient, and/or
@@ -1013,7 +1014,7 @@ Internet-Draft          Perfect Passive
    packets, or grouping information into more/fewer packets can reduce
    this risk at the expense of usable bandwidth; though this is
    implementation guidance, protocols should make it possible do to
-   dhis.  Similarly, fingerprinting can rely on inter-packet timing
+   this.  Similarly, fingerprinting can rely on inter-packet timing
    information: injecting delay into packet transmission can reduce this
    risk at the expense of latency.]

*** text
perpass non-WG                                               B. Trammell
Internet-Draft                                                ETH Zurich
Intended status: Informational                        September 04, 2013
Expires: March 08, 2014


  The Perfect Passive Adversary: A Threat Model for the Evaluation of
                 Protocols under Pervasive Surveillance
                   draft-trammell-perpass-ppa-00.txt

Abstract

   This document elaborates a threat model for the Perfect Passive
   Adversary (PPA): an adversary with an interest in eavesdropping that
   can passively observe network traffic at every layer at every point
   in the network between the endpoints.  It is intended to demonstrate
   to protocol designers and implementors the observability and
   inferability of information and metainformation transported over
   their respective protocols, to assist in the evaluation of the
   performance of these protocols and the effectiveness of their
   protection mechanisms under pervasive passive surveillance.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on March 08, 2014.

Copyright Notice

   Copyright (c) 2013 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents



Trammell                 Expires March 08, 2014                 [Page 1]

Internet-Draft          Perfect Passive Adversary         September 2013


   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Open Issues . . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   3
   4.  The Perfect Passive Adversary . . . . . . . . . . . . . . . .   3
   5.  Threat analysis . . . . . . . . . . . . . . . . . . . . . . .   4
     5.1.  Information subject to direct observation . . . . . . . .   5
     5.2.  Metainformation useful for inference  . . . . . . . . . .   5
   6.  Guidelines for protocol evaluation  . . . . . . . . . . . . .   5
   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   6
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   6
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   6
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   6
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   6

1.  Open Issues

   1.  Lots of things need citations that don't have them yet.

   2.  Threat analysis and protocol design guidelines need to be
       completed, which will require them to be started too.

2.  Introduction

   Surveillance is defined in [RFC6973], Section 5.1.1, as "the
   observation or monitoring of an individual's communications or
   activities".  Pervasive passive surveillance is the practice of
   surveillance at widespread observation points, without any
   modification of network traffic, and without any particular
   surveillance target in mind.  Pervasive passive surveillance allows
   subsequent analysis and inference to be applied to the collected data
   to achieve surveillance aims on a target to be identified later, or
   to analyze general communications patterns and/or behaviors without a
   specified target individual or group.

   An analysis of the costs and benefits of pervasive passive
   surveillance is explicitly out of scope of this work; we presume a
   priori that communications systems should aim to provide appropriate
   privacy guarantees to their users, and that such pervasive
   surveillance is therefore a bad thing.  Therefore, susceptibility to
   pervasive surveillance should be avoided as a design goal in protocol



Trammell                 Expires March 08, 2014                 [Page 2]

Internet-Draft          Perfect Passive Adversary         September 2013


   design.  From these assumptions we take the very act of pervasive
   surveillance to be adversarial by definition.

   This document outlines a threat model for an entity performing
   pervasive passive surveillance, termed the Perfect Passive Adversary
   (PPA), and explores how to apply this model to the evaluation of
   protocols.  As the primary threat posed by pervasive surveillance is
   a threat to the privacy of the parties to a given communication, this
   document is heavily based on [RFC6973].

3.  Terminology

   The terms Anonymity, Anonymity Set, Anonymous, Attacker,
   Eavesdropper, Fingerprint, Fingerprinting, Identifier, Identity,
   Individual, Initiator, Intermediary, Observer, Pseudonym,
   Pseudonymity, Pseudonymous, Recipient, and Traffic Analysis are used
   in this document as defined by Section 3, Terminology, of [RFC6973].
   In addition, this document defines the following terms:

   Observation:   Information collected directly from communications by
      an eavesdropper or observer.  For example, the knowledge that
      <alice@example.com> sent a message to <bob@example.com> via SMTP
      taken from the headers of an observed SMTP message would be an
      observation.

   Inference:   Information extracted from analysis of information
      collected directly from communications by an eavesdropper or
      observer.  For example, the knowledge that a given web page was
      accessed by a given IP address, by comparing the size in octets of
      measured network flow records to fingerprints derived from known
      sizes of linked resources on the web servers involved would be an
      inference.

4.  The Perfect Passive Adversary

















Trammell                 Expires March 08, 2014                 [Page 3]

Internet-Draft          Perfect Passive Adversary         September 2013


   The perfect passive adversary (PPA) is an eavesdropper that can
   potentially observe every packet of all communications at any or
   every hop in a network path between the outward-facing network
   interface of the last trusted machine in the initiator's
   administrative domain and the recipient, but can take no other action
   with respect to these communications.  Limiting the adversary to
   being completely passive may under-represent the threat to
   communications privacy posed especially by well-resourced
   adversaries, but represents well the maximum capability of a single
   entity whose surveillance is undetectable without physically securing
   the entire network path.  We also assume that the PPA does not have
   unlimited resources, i.e., that it will attempt to eavesdrop at the
   most efficient observation point available to it, and will collect as
   little raw data as necessary to support its aims.

   We explicitly assume the PPA does not have the ability to compromise
   trusted systems at either the initiator or a recipient of a
   communication.  Indeed, if the adversary is cooperating with one of
   the communications endpoints, there is no guidance to give to
   protocol designers that would improve the privacy and security of the
   individual at the other endpoint: the compromise is then truly out of
   the scope of the communication enabled by the protocol.

   We further assume the PPA does not have privileged information
   allowing the reversal of encryption, e.g. compromised key material or
   knowledge of weaknesses in the design or implementation of
   cryptographic algorithms at the initiator, recipient, and/or
   intermediaries.  While these risks do exist in the real world, the
   threat model is simplified if we presume that a given cryptographic
   protection for a protocol works as advertised.

   The tools available to the PPA are therefore direct observation and
   inference.  Direct observation involves taking information directly
   from eavesdropped communications - e.g., URLs identifying content or
   email addresses identifying individuals from application-layer
   headers.  Inference, on the other involves analyzing eavesdropped
   information to derive new information from it; e.g., searching for
   application or behavioral fingerprints in observed traffic to derive
   information about the observed individual from them, in absence of
   directly-observed sources of the same information.

5.  Threat analysis

   On initial examination, the PPA would appear to be trivially
   impossible to defend against.  If the PPA has access to every byte of
   every packet of a communication, then full application payload and
   content is available.  Guidance to protocol designers to provide
   cryptographic protection of confidentiality in their protocols (e.g.,



Trammell                 Expires March 08, 2014                 [Page 4]

Internet-Draft          Perfect Passive Adversary         September 2013


   through the use of TLS [RFC5246] at the transport layer and S/MIME
   [RFC3851] end-to-end) improves this situation somewhat, but metadata
   such as source and destination IP addresses and ports are still
   available to allow correlation and association of communications.
   Protocols that route messages based on recipient identifier or
   pseudonym, such as SMTP [RFC2821] and XMPP [RFC6120], still require
   intermediate systems to handle these.  If each hop of the
   communication is not secured, these identifiers may be available to
   an eavesdropper.

   Assuming that the PPA's resources are not unlimited allows us to back
   away from this worst-case scenario.  Storing full packet information
   for a fully-loaded 10 Gigabit Ethernet link will fill one 4TB hard
   disk (the largest commodity hard disk available as of this writing)
   in less than an hour; storing network flow data from the same link,
   e.g. as IPFIX Files [RFC5655], requires on the order of 1/1000 the
   storage (i.e., 4GB an hour).  Flow-based surveillance approaches,
   which store only communications metadata, are therefore more scalable
   for pervasive surveillance, so it is worthwhile to analyze
   information which can be inferred from various network traffic
   capture and analysis techniques other than full packet capture.

   In the remainder of this analysis, we list kinds of information which
   can be directly observed and those which can be used for inference
   through e.g. fingerprinting.  The former group may seem somewhat
   obvious, but are included for completeness.

5.1.  Information subject to direct observation

   [EDITOR'S NOTE: list includes but not limited to communications
   content, application-layer identifiers, network- and transport-layer
   identifiers, association of DNS queries with subsequent usage of
   information in the answers.]

5.2.  Metainformation useful for inference

   [EDITOR'S NOTE: list includes but not limited to interpacket timing;
   packet sizes; flow packet and octet counts; presence of options which
   could lead to OS fingerprinting for deNATting, etc.]

6.  Guidelines for protocol evaluation

   [EDITOR'S NOTE: How to look at a protocol and evaluate the
   observability of the information it transports?]

   [EDITOR'S NOTE: General guidance: end-to-end encryption when
   possible.  Apply unlinked pseudonyms for message routing on envelopes
   around end-to-end encrypted content.]



Trammell                 Expires March 08, 2014                 [Page 5]

Internet-Draft          Perfect Passive Adversary         September 2013


   [EDITOR'S NOTE: General guidance: Fingerprinting can rely on packet
   and flow size information; the inclusion of null information in
   packets, or grouping information into more/fewer packets can reduce
   this risk at the expense of usable bandwidth; though this is
   implementation guidance, protocols should make it possible do to
   this.  Similarly, fingerprinting can rely on inter-packet timing
   information: injecting delay into packet transmission can reduce this
   risk at the expense of latency.]

7.  Acknowledgments

   Thanks to Dilip Many, Daniel Borkmann, and Stephan Neuhaus, who
   contributed to an initial version of this work.

8.  References

8.1.  Normative References

   [RFC6973]  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,
              Morris, J., Hansen, M., and R. Smith, "Privacy
              Considerations for Internet Protocols", RFC 6973, July
              2013.

8.2.  Informative References

   [RFC2821]  Klensin, J., "Simple Mail Transfer Protocol", RFC 2821,
              April 2001.

   [RFC3851]  Ramsdell, B., "Secure/Multipurpose Internet Mail
              Extensions (S/MIME) Version 3.1 Message Specification",
              RFC 3851, July 2004.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246, August 2008.

   [RFC5655]  Trammell, B., Boschi, E., Mark, L., Zseby, T., and A.
              Wagner, "Specification of the IP Flow Information Export
              (IPFIX) File Format", RFC 5655, October 2009.

   [RFC6120]  Saint-Andre, P., "Extensible Messaging and Presence
              Protocol (XMPP): Core", RFC 6120, March 2011.

Author's Address








Trammell                 Expires March 08, 2014                 [Page 6]

Internet-Draft          Perfect Passive Adversary         September 2013


   Brian Trammell
   Swiss Federal Institute of Technology Zurich
   Gloriastrasse 35
   8092 Zurich
   Switzerland

   Phone: +41 44 632 70 13
   Email: trammell@tik.ee.ethz.ch











































Trammell                 Expires March 08, 2014                 [Page 7]
