X-Draft-From: ("nnimap+ndn:INBOX" 43248)
References: <51960779.7090002@wcss.pl> <87ppwpwz5j.fsf@nordberg.se>
	<51962B4F.1030600@wcss.pl> <87r4h2owzb.fsf@nordberg.se>
	<519A1ED4.1050604@wcss.pl> <8761ydptzx.fsf@nordberg.se>
	<519B1533.1070707@wcss.pl> <87fvxgon0g.fsf@nordberg.se>
	<519B1932.2030804@wcss.pl> <877gisol1n.fsf@nordberg.se>
	<519B4818.4030909@wcss.pl>
Gcc: nnimap+adb-centralen:INBOX.sent-mail.2013-05
To: Adam Smutnicki <adam.smutnicki@wcss.pl>
cc: radsecproxy@uninett.no 
Subject: Re: CRL based hang up
Organization: NORDUnet A/S
From: Linus Nordberg <linus@nordu.net>
Date: Tue, 28 May 2013 14:09:30 +0200
--text follows this line--
Adam Smutnicki <adam.smutnicki@wcss.pl> wrote
Tue, 21 May 2013 12:10:32 +0200:

| I've seen CRL failures for PL1 and PL2 servers (according to
| configuration below) and dynamic abroad servers. I'm running a regional
| server, so we have udp connections from institution radius servers and
| we proxy their requests to polish servers (PL1 and PL2) and
| international ones.

Hi Adam,

Are you familiar with how to apply a patch and how to build radsecproxy?

I'd like someone who isn't me to test the following patch.

--8<---------------cut here---------------start------------->8---
diff --git a/tlscommon.c b/tlscommon.c
index 619808b..25daa87 100644
--- a/tlscommon.c
+++ b/tlscommon.c
@@ -184,11 +184,21 @@ static int tlsaddcacrl(SSL_CTX *ctx, struct tls *conf) {
     SSL_CTX_set_verify_depth(ctx, MAX_CERT_DEPTH + 1);
 
     if (conf->crlcheck || conf->vpm) {
+        X509_VERIFY_PARAM *x509_p = X509_VERIFY_PARAM_new();
 	x509_s = SSL_CTX_get_cert_store(ctx);
-	if (conf->crlcheck)
-	    X509_STORE_set_flags(x509_s, X509_V_FLAG_CRL_CHECK | X509_V_FLAG_CRL_CHECK_ALL);
+	if (conf->crlcheck) {
+            if (X509_VERIFY_PARAM_set_flags(
+                    x509_p,
+                    X509_V_FLAG_CRL_CHECK | X509_V_FLAG_CRL_CHECK_ALL) == 0) {
+                debug(DBG_ERR, "%s: Error enabling CRL checking", __func__);
+                X509_VERIFY_PARAM_free(x509_p);
+                return 0;
+            }
+        }
 	if (conf->vpm)
 	    X509_STORE_set1_param(x509_s, conf->vpm);
+        SSL_CTX_set1_param(ctx, x509_p);
+        X509_VERIFY_PARAM_free(x509_p);
     }
 
     debug(DBG_DBG, "tlsaddcacrl: updated TLS context %s", conf->name);
--8<---------------cut here---------------end--------------->8---
