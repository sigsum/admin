From: Linus Nordberg <linus@nordu.net>
To: Bryan Ford <bryan.ford@epfl.ch>
Cc: Linus Gasser <linus.gasser@epfl.ch>
Subject: Re: Contribution to CT-code
Organization: NORDUnet A/S
References: <56275CCD.9000908@epfl.ch>
	<28C36F64-D275-45AD-B8D9-6F7A91ADD863@epfl.ch>
X-Draft-From: ("nnimap+ndn:INBOX" 62415)
Gcc: nnimap+adbc:sent-mail.2015-10
In-Reply-To: <28C36F64-D275-45AD-B8D9-6F7A91ADD863@epfl.ch> (Bryan Ford's
	message of "Wed, 21 Oct 2015 11:41:36 +0200")
User-Agent: Gnus/5.13 (Gnus v5.13)
Date: Wed, 21 Oct 2015 15:10:06 +0200
--text follows this line--
Hi both,

First, I'm not with Google. I work on a totally separate implementation
of a CT log called catlfish [0]. So I'm not the right person to talk to
regarding Googles CT implementation. I suggest talking to Al Cutter or
someone on their public mailing list on CT.

[0] https://www.ct.nordu.net/

I also work on the CT Gossip draft [1] together with dkj and Tom Ritter. We
are concerned with privacy and would be delighted if you'd care to
comment on -01, posted yesterday.

[1] https://tools.ietf.org/wg/trans/draft-ietf-trans-gossip/


Next, thanks for writing this up. I failed at following Bryans
discussions at the IETF meeting in Prague and have had this,
understanding multisig in CT, on my list since then.

Without knowing anything more about CoSi than what your draft describes,
this seems like interesting work to me.

If you like Erlang better than C++ (of course you do!), I suggest you
experiment with catlfish rather than Google's log. I'd be more than
happy to help you get started.


Finally, small things I bumped into when reading your draft:

-   o  Even when feasible, unrestricted gossip can compromised privacy,
s/compromised/compromise/1

-   generated by one round of the CoSi colllective signing protocol
s/colllective/collective/1

-   do not change too often (e.g., once a year), clients will not need
   not follow too many such forward-pointers unless they are so out-of-
"not need not follow"?


Bryan Ford <bryan.ford@epfl.ch> wrote
Wed, 21 Oct 2015 11:41:36 +0200:

| Hi Linus (N),
| 
| Just a quick further clarification to Linus (G)’s E-mail to you: We
| noticed that the latest version of the CT-bis Internet-Draft specifies
| that the STH now has an SthExtensions field that seems more-or-less
| what we need to hook in our collective signing mechanism - but
| Google's main certificate-transparency repo doesn’t appear to be
| up-to-date with respect to this version of the STH structure spec.  Is
| there another more “bleeding-edge” branch or fork of the CT code
| somewhere that we should be using instead of the main CT
| implementation, or has the SthExtensions part of the spec simply not
| propagated to the code yet?
| 
| Thanks
| Bryan
| 
| > On Oct 21, 2015, at 11:37 AM, Linus Gasser <linus.gasser@epfl.ch> wrote:
| > 
| > Dear sir,
| > 
| > I'm working at the EPFL in Switzerland with prof. Bryan Ford on a
| > project called Cothority where we use merkle-trees to collectively
| > sign messages. We have a first prototype that is running on
| > https://github.com/dedis/cothority and plan on using that to extend
| > the Certificate-Transparency logservers STHs in the following way:
| > 
| > https://tools.ietf.org/html/draft-ford-trans-witness-00> 
| > Would it be possible that you point me to a good place in the
| > certificate-transparency code to hook in so that we can extend the
| > STHs with a signature received from our Cothority-tree?
| > Once the STH is created, I would need to send a message to our
| > cothority-tree and wait for the response (1-30 seconds), then attach
| > that signature to the STH.
| > 
| > I did checkout the actual certificate-transparency from github and
| > managed to compile it on Ubuntu.
| > 
| > Thank you very much in advance,
| > 
| > Linus Gasser
| > 
| > PS: Nice coincidence of me choosing your name from the
| > CONTRIBUTORS-file and finding that we'll be together at
| > IETF-trans-session on Monday 2nd.
